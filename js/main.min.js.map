{"version":3,"file":"main.min.js","mappings":"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","sources":["webpack://main/webpack/runtime/async module","webpack://main/./actions.js","webpack://main/./main.js","webpack://main/./media_player.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/auth.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/commands.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/store.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/collection.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/entities.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/errors.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/socket.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/connection.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/index.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/messages.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/util.js","webpack://main/webpack/bootstrap","webpack://main/webpack/runtime/define property getters","webpack://main/webpack/runtime/hasOwnProperty shorthand","webpack://main/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","import {\r\n    callService\r\n} from \"home-assistant-js-websocket\";\r\n\r\n/* Based on ethanny2 solution: https://gist.github.com/ethanny2/44d5ad69970596e96e0b48139b89154b */\r\nfunction detectDoubleTap(doubleTapMs) {\r\n    let timeout, lastTap = 0;\r\n\r\n    return function detectDoubleTap(event) {\r\n        const currentTime = new Date().getTime();\r\n        const tapLength   = currentTime - lastTap;\r\n\r\n        if (0 < tapLength && tapLength < doubleTapMs) {\r\n            event.preventDefault();\r\n\r\n            const doubleTap = new CustomEvent(\"doubletap\", {\r\n                bubbles: true,\r\n                detail: event\r\n            });\r\n\r\n            event.target.dispatchEvent(doubleTap)\r\n        } else {\r\n            timeout = setTimeout(() => clearTimeout(timeout), doubleTapMs)\r\n        }\r\n        lastTap = currentTime\r\n    }\r\n}\r\n\r\n// initialize the new event\r\ndocument.addEventListener('pointerup', detectDoubleTap(500));\r\n\r\n// Listen to two taps on the screen and turn change the lights\r\ndocument.addEventListener('doubletap', () => {\r\n    document.getElementById('popup').classList.remove('hidden');\r\n});\r\n\r\ndocument.addEventListener('click', ev =>{\r\n    let target  = ev.target;\r\n    let action;\r\n\r\n    if(target.dataset.action == 'all-on'){\r\n        action  = 'turn_on';\r\n    }else if(target.dataset.action == 'all-off'){\r\n        action  = 'turn_off';\r\n    }else if(target.closest('.modal-close') != undefined){\r\n        document.getElementById('popup').classList.add('hidden');\r\n\r\n        closeModal();\r\n    }\r\n\r\n    if(action){\r\n        closeModal();\r\n\r\n        ['switch.woonkamer_lamp_switch_0', 'switch.smart_plug_3_socket_1', 'switch.smart_plug_2_socket_1'].forEach(id =>{\r\n            callService(connection, \"homeassistant\", action, {\r\n                entity_id: id,\r\n            });\r\n        });\r\n    }\r\n});\r\n\r\nfunction closeModal(){\r\n    document.getElementById('popup').classList.add('hidden');\r\n}","import {\r\n    createLongLivedTokenAuth,\r\n    getAuth,\r\n    getUser,\r\n    createConnection,\r\n    subscribeEntities,\r\n    ERR_HASS_HOST_REQUIRED\r\n} from \"home-assistant-js-websocket\";\r\n\r\nimport './secrets.js';\r\nimport './actions.js';\r\nimport {showMediaPlayer} from './media_player.js';\r\n\r\nlet unsubEntities;\r\n \r\n// Only check the ones we are interested in \r\nvar entIds          = [\r\n    'sensor.pws_temperature',\r\n    'sensor.pws_temperature_indoor',\r\n    'sensor.pws_humidity_indoor',\r\n    'sensor.pws_humidity',\r\n    'sensor.maximum_temperature_outside',\r\n    'sensor.minimum_temperature_outside',\r\n    'sensor.maximum_temperature_inside',\r\n    'sensor.minimum_temperature_inside',\r\n    'sensor.pws_rain',\r\n    'sensor.pws_rainrate',\r\n    'media_player.allemaal',\r\n    'media_player.keuken',\r\n    'media_player.woonkamer',\r\n    'switch.woonkamer_lamp_switch_0' \r\n];\r\n\r\nasync function authenticate(){\r\n    let auth;\r\n    const storeAuth     = true;\r\n    const authOptions   = storeAuth\r\n    ? {\r\n        async loadTokens() {\r\n            try {\r\n                return JSON.parse(localStorage.hassTokens);\r\n            } catch (err) {\r\n                return undefined;\r\n            }\r\n        },\r\n        saveTokens: (tokens) => {\r\n            localStorage.hassTokens = JSON.stringify(tokens);\r\n        },\r\n    }\r\n    : {};\r\n\r\n    try {\r\n        auth            = await getAuth(authOptions);\r\n    } catch (err) {\r\n        if (err === ERR_HASS_HOST_REQUIRED) {\r\n            authOptions.hassUrl = prompt(\r\n                \"What host to connect to?\",\r\n                \"http://localhost:8123\",\r\n            );\r\n\r\n            if (!authOptions.hassUrl) return;\r\n\r\n            auth            = await getAuth(authOptions);\r\n        } else {\r\n            alert(`Unknown error: ${err}`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    window.connection = await createConnection({ auth });\r\n    \r\n    for (const ev of [\"disconnected\", \"ready\", \"reconnect-error\"]) {\r\n        window.connection.addEventListener(ev, () => console.log(`Event: ${ev}`));\r\n    }\r\n\r\n    // Clear url if we have been able to establish a connection\r\n    if (location.search.includes(\"auth_callback=1\")) {\r\n        history.replaceState(null, \"\", location.pathname);\r\n    }\r\n\r\n    // To play from the console\r\n    window.auth         = auth;\r\n\r\n    getUser(window.connection).then((user) => {\r\n        console.log(\"Logged in as\", user);\r\n        window.user = user;\r\n    });\r\n}\r\n\r\nfunction setMaxMinContent(selector, entity){\r\n    document.querySelectorAll(selector).forEach(el => el.textContent   =   entity.state + '°');\r\n\r\n    let time        = new Date(entity.last_changed);\r\n    let h           = time.getHours();\r\n    let m           = time.getMinutes();\r\n    m               = addLeadingZeros(m);\r\n    document.querySelectorAll(selector.replace('-temp', '-time')).forEach(el => el.textContent   =   `${h}:${m}`);  \r\n}\r\n\r\nfunction processEntity(entity, entities){\r\n    let entId   = entity.entity_id;\r\n\r\n    // Temperatures\r\n    if( entId == 'sensor.pws_temperature'){\r\n        document.querySelector(`#outside .tempwrapper .temp`).textContent = entity.state;\r\n\r\n        checkTimedOut(entity, `#outside .tempwrapper .temp`);\r\n    }else if( entId == 'sensor.pws_temperature_indoor'){\r\n        document.querySelector(`#inside .tempwrapper .temp`).textContent = entity.state;\r\n\r\n        checkTimedOut(entity, `#inside .tempwrapper .temp`);\r\n    }\r\n\r\n    // Humidity\r\n    else if( entId == 'sensor.pws_humidity'){\r\n        document.querySelector(`#outside .humwrapper .hum`).textContent = entity.state;\r\n    }else if( entId == 'sensor.pws_humidity_indoor'){\r\n        document.querySelector(`#inside .humwrapper .hum`).textContent = entity.state;\r\n    }\r\n    \r\n    // Max Temps\r\n    else if( entId == 'sensor.maximum_temperature_outside'){\r\n        setMaxMinContent('#outside .max .max-temp', entity);\r\n    }else if( entId == 'sensor.maximum_temperature_inside'){\r\n        setMaxMinContent('#inside .max .max-temp', entity); \r\n    }\r\n    \r\n    // Min temps\r\n    else if( entId == 'sensor.minimum_temperature_outside'){\r\n        setMaxMinContent('#outside .min .min-temp', entity);\r\n    }else if( entId == 'sensor.minimum_temperature_inside'){\r\n        setMaxMinContent('#inside .min .min-temp', entity); \r\n    }\r\n    \r\n    // Rain\r\n    else if( entId == 'sensor.pws_rain'){\r\n        updateRain(entity.state, entities['sensor.pws_rainrate']);\r\n    }else if( entId == 'sensor.pws_rainrate'){\r\n        updateRain(entities['sensor.pws_rain'], entity.state);\r\n    }\r\n}\r\n\r\n// Display the received entities\r\nfunction renderEntities(connection, entities) {\r\n    let firstRun    = false;\r\n\r\n    if(window.entities == undefined){\r\n        window.entities = entities;\r\n        firstRun        = true;\r\n    }\r\n\r\n    // Loop over the entities we are interested in\r\n    let playing = false;\r\n\r\n    Object.values(entities).forEach(entity => {\r\n        // Only do something if needed\r\n        if(entity.state != window.entities[entity.entity_id].state || firstRun){\r\n            processEntity(entity, entities);\r\n        }\r\n\r\n        // Check if we are playing no matter if it is changed or not\r\n        if( entity.entity_id.includes( 'media_player' ) && ( entity.state == 'playing' || entity.state == 'buffering' || entity.state == 'paused')){\r\n            playing = true;\r\n            showMediaPlayer(entity);\r\n        }\r\n    });\r\n\r\n    // Store the updated entities\r\n    window.entities = entities;\r\n\r\n    // Show main container again if we are not playing and there is an iframe\r\n    if( !playing){\r\n        console.log('Hiding Media player');\r\n\r\n        // hide all\r\n        document.querySelector('#mediaplayer').classList.add('hidden');\r\n\r\n        document.querySelector('#container').classList.remove('hidden');\r\n    }\r\n}\r\n  \r\n/**\r\n * Updates the date and time on the header\r\n */\r\nfunction setDateTime() {\r\n    const today     = new Date();\r\n    let h           = today.getHours();\r\n    let m           = today.getMinutes();\r\n    m               = addLeadingZeros(m);\r\n\r\n    let dateString  = `${today.getDate()}-${today.getMonth()+1}-${today.getFullYear()}`;\r\n\r\n    if(document.getElementById('clock').innerHTML !=  h + \":\" + m){\r\n        document.getElementById('clock').innerHTML =  h + \":\" + m;\r\n    }\r\n\r\n    if(document.getElementById('date').innerHTML !=  dateString){\r\n        document.getElementById('date').innerHTML =  dateString;\r\n    }\r\n}\r\n\r\n/**\r\n * Adds a zero to numbers below 10\r\n * \r\n * @param {integer} i the number to check\r\n * \r\n * @returns {string}    number with leading zeros if needed\r\n */\r\nfunction addLeadingZeros(i) {\r\n    if (i < 10) {i = \"0\" + i};  // add zero in front of numbers < 10\r\n\r\n    return i;\r\n}\r\n\r\n/**\r\n * Check if a device is not updated in a while\r\n * @param {object}  entity      The home assistant enity\r\n * @param {string}  selector    The queryselector\r\n */\r\nfunction checkTimedOut(entity, selector){\r\n    let date        = Date.parse(entity.last_changed);\r\n\r\n    let minutes     = ( Date.now() - date ) / 1000 / 60;\r\n\r\n    let timedOut    = false;\r\n\r\n    if(minutes > 180){\r\n        timedOut    = true;\r\n    }\r\n\r\n    if(timedOut){\r\n        document.querySelector(selector).classList.add('timedout');\r\n    }else{\r\n        document.querySelector(selector).classList.remove('timedout');\r\n    }\r\n}\r\n\r\n/**\r\n * Updates the display of the rain\r\n */\r\nfunction updateRain(rain, rainRate){\r\n    if(rain == 0){\r\n        return;\r\n    }\r\n\r\n    let el  = document.getElementById('rain');\r\n\r\n    let val = `<img src='rain.png' width='70px'>`;\r\n\r\n    if(rainRate > 0){\r\n        val += `${rainRate}mm/h`;\r\n    }else if(rain > 0){\r\n        val += `${rain}mm`;\r\n    }else{\r\n        val = ``;\r\n    }\r\n\r\n    if(el.innerHTML !=  val){\r\n        el.innerHTML =  val;\r\n\r\n        if(val == ''){\r\n            el.style.display = 'none';\r\n            document.getElementById('date').style.display = 'block';\r\n        }else{\r\n            el.style.display = 'block';\r\n            document.getElementById('date').style.display = 'none';\r\n        }\r\n    }\r\n}\r\n\r\nwindow.setupEntitiesSubscription = async () => {\r\n    if (unsubEntities) {\r\n        unsubEntities();\r\n        console.log(\"Sleeping\");\r\n        await new Promise((resolve) => setTimeout(resolve, 4000));\r\n    }\r\n\r\n    unsubEntities = subscribeEntities(\r\n        window.connection, \r\n        (entities) => renderEntities(window.connection, entities),\r\n        entIds\r\n    );\r\n};\r\n\r\n// Update the time every minute\r\nsetDateTime();\r\nsetInterval(setDateTime, 60000);\r\n\r\nif(typeof(HA_INSTANCE) != 'undefined'){\r\n    console.log('Logging in with long live access token');\r\n\r\n    await (async () => {\r\n        const auth = createLongLivedTokenAuth(\r\n            HA_INSTANCE,\r\n            HA_SECRET,\r\n        );\r\n\r\n        window.connection = await createConnection({ auth });\r\n    })();\r\n}else{\r\n    await authenticate();\r\n}\r\n\r\nsetupEntitiesSubscription();\r\n\r\nwindow.scrollTo(0, 0);","import {\r\n    callService\r\n} from \"home-assistant-js-websocket\";\r\n\r\nvar progressTimer;\r\n\r\n// function to show the screen\r\nexport function showMediaPlayer(entity){\r\n    console.log(entity)\r\n\r\n    let mediaplayer = document.querySelector('#mediaplayer');\r\n    mediaplayer.classList.remove('hidden');\r\n\r\n    // Store the device we are playing on\r\n    mediaplayer.dataset.player_id   = entity.entity_id;\r\n\r\n    console.log('Showing Media player');\r\n\r\n    // Hide main container\r\n    document.querySelector('.container').classList.add('hidden');\r\n\r\n    // Background image\r\n    if(entity.attributes.entity_picture != undefined){\r\n        mediaplayer.style.backgroundImage               = `url(\"${entity.attributes.entity_picture}\")`; //https://i.scdn.co/image/ab67616d0000b273c1fe6f334de756c96d708d95\r\n    }else if(entity.attributes.app_name == 'Spotify'){\r\n        mediaplayer.style.backgroundImage               = `url(images/spotify.png)`; \r\n    }else if(entity.attributes.app_name == 'Youtube'){\r\n        mediaplayer.style.backgroundImage               = `url(images/youtube.png)`; \r\n    }\r\n\r\n    // Title\r\n    mediaplayer.querySelector(`.title`).textContent     = entity.attributes.media_title;\r\n\r\n    // Volume\r\n    mediaplayer.querySelector('#volume-slider').value   = entity.attributes.volume_level;\r\n\r\n    // Playback controls\r\n    if(entity.state == 'playing' || entity.state == 'buffering'){\r\n        mediaplayer.querySelector(`#pause`).classList.remove('hidden');\r\n        mediaplayer.querySelector(`#play`).classList.add('hidden');\r\n    }else{\r\n        mediaplayer.querySelector(`#pause`).classList.add('hidden');\r\n        mediaplayer.querySelector(`#play`).classList.remove('hidden');\r\n    }\r\n\r\n    // Seek control\r\n\r\n    // We do not get a progress update every time, so do it manualy until the next update\r\n    if(progressTimer != ''){\r\n        clearInterval(progressTimer);\r\n    }\r\n\r\n    mediaplayer.querySelector(`#progress`).max          = entity.attributes.media_duration;\r\n    mediaplayer.querySelector(`#progress`).value        = entity.attributes.media_position;\r\n\r\n    if(entity.state == 'playing'){\r\n        progressTimer   = setInterval((ev) => mediaplayer.querySelector(`#progress`).value = parseFloat(mediaplayer.querySelector(`#progress`).value) + 0.1, 100);\r\n    }\r\n}\r\n\r\n// Listen to controls\r\ndocument.addEventListener('click', (event) => {\r\n    let target              = event.target;\r\n    let parent              = target.closest('span');\r\n    let mediaControlWrapper = target.closest(`#mediaplayer`);\r\n    if(mediaControlWrapper == null){\r\n        return;\r\n    }\r\n    let domain              = target.dataset.domain;\r\n    if(domain == undefined){\r\n        domain  = \"media_player\";\r\n    }\r\n    \r\n    // The entity id of the device we run the action for\r\n    let playerId    = mediaControlWrapper.dataset.player_id;   \r\n\r\n    let action;\r\n\r\n    let data        = {\r\n        entity_id: playerId\r\n    }\r\n\r\n    if(target.id    == 'volume-slider'){\r\n        action                  = 'volume_set';\r\n\r\n        data['volume_level']    = Math.min(target.value, 0.9); \r\n    }else if(parent != null){\r\n        action  = parent.dataset.action;\r\n    }else{\r\n        action  = target.dataset.action;\r\n    }\r\n\r\n    if(action == 'volume_mute'){\r\n        console.log(parent);\r\n        if(parent.querySelector('img').src.includes('volume-mute.png')){\r\n            console.log(parent);\r\n            data['is_volume_muted'] = true;\r\n            parent.querySelector('img').src = 'images/volume-muted.png'\r\n        }else{\r\n            console.log(parent);\r\n            data['is_volume_muted'] = false;\r\n            parent.querySelector('img').src = 'images/volume-mute.png'\r\n        }\r\n    }else if(action == 'media_seek'){\r\n        data['seek_position']   = target.value;\r\n    }\r\n\r\n    callService(connection, domain, action, data);\r\n});","import { parseQuery } from \"./util.js\";\nimport { ERR_HASS_HOST_REQUIRED, ERR_INVALID_AUTH, ERR_INVALID_AUTH_CALLBACK, ERR_INVALID_HTTPS_TO_HTTP, } from \"./errors.js\";\nexport const genClientId = () => `${location.protocol}//${location.host}/`;\nexport const genExpires = (expires_in) => {\n    return expires_in * 1000 + Date.now();\n};\nfunction genRedirectUrl() {\n    // Get current url but without # part.\n    const { protocol, host, pathname, search } = location;\n    return `${protocol}//${host}${pathname}${search}`;\n}\nfunction genAuthorizeUrl(hassUrl, clientId, redirectUrl, state) {\n    let authorizeUrl = `${hassUrl}/auth/authorize?response_type=code&redirect_uri=${encodeURIComponent(redirectUrl)}`;\n    if (clientId !== null) {\n        authorizeUrl += `&client_id=${encodeURIComponent(clientId)}`;\n    }\n    if (state) {\n        authorizeUrl += `&state=${encodeURIComponent(state)}`;\n    }\n    return authorizeUrl;\n}\nfunction redirectAuthorize(hassUrl, clientId, redirectUrl, state) {\n    // Add either ?auth_callback=1 or &auth_callback=1\n    redirectUrl += (redirectUrl.includes(\"?\") ? \"&\" : \"?\") + \"auth_callback=1\";\n    document.location.href = genAuthorizeUrl(hassUrl, clientId, redirectUrl, state);\n}\nasync function tokenRequest(hassUrl, clientId, data) {\n    // Browsers don't allow fetching tokens from https -> http.\n    // Throw an error because it's a pain to debug this.\n    // Guard against not working in node.\n    const l = typeof location !== \"undefined\" && location;\n    if (l && l.protocol === \"https:\") {\n        // Ensure that the hassUrl is hosted on https.\n        const a = document.createElement(\"a\");\n        a.href = hassUrl;\n        if (a.protocol === \"http:\" && a.hostname !== \"localhost\") {\n            throw ERR_INVALID_HTTPS_TO_HTTP;\n        }\n    }\n    const formData = new FormData();\n    if (clientId !== null) {\n        formData.append(\"client_id\", clientId);\n    }\n    Object.keys(data).forEach((key) => {\n        // @ts-ignore\n        formData.append(key, data[key]);\n    });\n    const resp = await fetch(`${hassUrl}/auth/token`, {\n        method: \"POST\",\n        credentials: \"same-origin\",\n        body: formData,\n    });\n    if (!resp.ok) {\n        throw resp.status === 400 /* auth invalid */ ||\n            resp.status === 403 /* user not active */\n            ? ERR_INVALID_AUTH\n            : new Error(\"Unable to fetch tokens\");\n    }\n    const tokens = await resp.json();\n    tokens.hassUrl = hassUrl;\n    tokens.clientId = clientId;\n    tokens.expires = genExpires(tokens.expires_in);\n    return tokens;\n}\nfunction fetchToken(hassUrl, clientId, code) {\n    return tokenRequest(hassUrl, clientId, {\n        code,\n        grant_type: \"authorization_code\",\n    });\n}\nfunction encodeOAuthState(state) {\n    return btoa(JSON.stringify(state));\n}\nfunction decodeOAuthState(encoded) {\n    return JSON.parse(atob(encoded));\n}\nexport class Auth {\n    constructor(data, saveTokens) {\n        this.data = data;\n        this._saveTokens = saveTokens;\n    }\n    get wsUrl() {\n        // Convert from http:// -> ws://, https:// -> wss://\n        return `ws${this.data.hassUrl.substr(4)}/api/websocket`;\n    }\n    get accessToken() {\n        return this.data.access_token;\n    }\n    get expired() {\n        return Date.now() > this.data.expires;\n    }\n    /**\n     * Refresh the access token.\n     */\n    async refreshAccessToken() {\n        if (!this.data.refresh_token)\n            throw new Error(\"No refresh_token\");\n        const data = await tokenRequest(this.data.hassUrl, this.data.clientId, {\n            grant_type: \"refresh_token\",\n            refresh_token: this.data.refresh_token,\n        });\n        // Access token response does not contain refresh token.\n        data.refresh_token = this.data.refresh_token;\n        this.data = data;\n        if (this._saveTokens)\n            this._saveTokens(data);\n    }\n    /**\n     * Revoke the refresh & access tokens.\n     */\n    async revoke() {\n        if (!this.data.refresh_token)\n            throw new Error(\"No refresh_token to revoke\");\n        const formData = new FormData();\n        formData.append(\"token\", this.data.refresh_token);\n        // There is no error checking, as revoke will always return 200\n        await fetch(`${this.data.hassUrl}/auth/revoke`, {\n            method: \"POST\",\n            credentials: \"same-origin\",\n            body: formData,\n        });\n        if (this._saveTokens) {\n            this._saveTokens(null);\n        }\n    }\n}\nexport function createLongLivedTokenAuth(hassUrl, access_token) {\n    return new Auth({\n        hassUrl,\n        clientId: null,\n        expires: Date.now() + 1e11,\n        refresh_token: \"\",\n        access_token,\n        expires_in: 1e11,\n    });\n}\nexport async function getAuth(options = {}) {\n    let data;\n    let hassUrl = options.hassUrl;\n    // Strip trailing slash.\n    if (hassUrl && hassUrl[hassUrl.length - 1] === \"/\") {\n        hassUrl = hassUrl.substr(0, hassUrl.length - 1);\n    }\n    const clientId = options.clientId !== undefined ? options.clientId : genClientId();\n    const limitHassInstance = options.limitHassInstance === true;\n    // Use auth code if it was passed in\n    if (options.authCode && hassUrl) {\n        data = await fetchToken(hassUrl, clientId, options.authCode);\n        if (options.saveTokens) {\n            options.saveTokens(data);\n        }\n    }\n    // Check if we came back from an authorize redirect\n    if (!data) {\n        const query = parseQuery(location.search.substr(1));\n        // Check if we got redirected here from authorize page\n        if (\"auth_callback\" in query) {\n            // Restore state\n            const state = decodeOAuthState(query.state);\n            if (limitHassInstance &&\n                (state.hassUrl !== hassUrl || state.clientId !== clientId)) {\n                throw ERR_INVALID_AUTH_CALLBACK;\n            }\n            data = await fetchToken(state.hassUrl, state.clientId, query.code);\n            if (options.saveTokens) {\n                options.saveTokens(data);\n            }\n        }\n    }\n    // Check for stored tokens\n    if (!data && options.loadTokens) {\n        data = await options.loadTokens();\n    }\n    if (data) {\n        return new Auth(data, options.saveTokens);\n    }\n    if (hassUrl === undefined) {\n        throw ERR_HASS_HOST_REQUIRED;\n    }\n    // If no tokens found but a hassUrl was passed in, let's go get some tokens!\n    redirectAuthorize(hassUrl, clientId, options.redirectUrl || genRedirectUrl(), encodeOAuthState({\n        hassUrl,\n        clientId,\n    }));\n    // Just don't resolve while we navigate to next page\n    return new Promise(() => { });\n}\n","import * as messages from \"./messages.js\";\nexport const getStates = (connection) => connection.sendMessagePromise(messages.states());\nexport const getServices = (connection) => connection.sendMessagePromise(messages.services());\nexport const getConfig = (connection) => connection.sendMessagePromise(messages.config());\nexport const getUser = (connection) => connection.sendMessagePromise(messages.user());\nexport const callService = (connection, domain, service, serviceData, target, returnResponse) => connection.sendMessagePromise(messages.callService(domain, service, serviceData, target, returnResponse));\n","export const createStore = (state) => {\n    let listeners = [];\n    function unsubscribe(listener) {\n        let out = [];\n        for (let i = 0; i < listeners.length; i++) {\n            if (listeners[i] === listener) {\n                listener = null;\n            }\n            else {\n                out.push(listeners[i]);\n            }\n        }\n        listeners = out;\n    }\n    function setState(update, overwrite) {\n        state = overwrite ? update : Object.assign(Object.assign({}, state), update);\n        let currentListeners = listeners;\n        for (let i = 0; i < currentListeners.length; i++) {\n            currentListeners[i](state);\n        }\n    }\n    /**\n     * An observable state container, returned from {@link createStore}\n     * @name store\n     */\n    return {\n        get state() {\n            return state;\n        },\n        /**\n         * Create a bound copy of the given action function.\n         * The bound returned function invokes action() and persists the result back to the store.\n         * If the return value of `action` is a Promise, the resolved value will be used as state.\n         * @param {Function} action\tAn action of the form `action(state, ...args) -> stateUpdate`\n         * @returns {Function} boundAction()\n         */\n        action(action) {\n            function apply(result) {\n                setState(result, false);\n            }\n            // Note: perf tests verifying this implementation: https://esbench.com/bench/5a295e6299634800a0349500\n            return function () {\n                let args = [state];\n                for (let i = 0; i < arguments.length; i++)\n                    args.push(arguments[i]);\n                // @ts-ignore\n                let ret = action.apply(this, args);\n                if (ret != null) {\n                    return ret instanceof Promise ? ret.then(apply) : apply(ret);\n                }\n            };\n        },\n        /**\n         * Apply a partial state object to the current state, invoking registered listeners.\n         * @param {Object} update\t\t\t\tAn object with properties to be merged into state\n         * @param {Boolean} [overwrite=false]\tIf `true`, update will replace state instead of being merged into it\n         */\n        setState,\n        clearState() {\n            state = undefined;\n        },\n        /**\n         * Register a listener function to be called whenever state is changed. Returns an `unsubscribe()` function.\n         * @param {Function} listener\tA function to call when state changes. Gets passed the new state.\n         * @returns {Function} unsubscribe()\n         */\n        subscribe(listener) {\n            listeners.push(listener);\n            return () => {\n                unsubscribe(listener);\n            };\n        },\n        // /**\n        //  * Remove a previously-registered listener function.\n        //  * @param {Function} listener\tThe callback previously passed to `subscribe()` that should be removed.\n        //  * @function\n        //  */\n        // unsubscribe,\n    };\n};\n","import { createStore } from \"./store.js\";\n// Time to wait to unsubscribe from updates after last subscriber unsubscribes\nconst UNSUB_GRACE_PERIOD = 5000; // 5 seconds\nconst DEBUG = false;\n/**\n *\n * @param conn connection\n * @param key the key to store it on the connection. Must be unique for each collection.\n * @param fetchCollection fetch the current state. If undefined assumes subscribeUpdates receives current state\n * @param subscribeUpdates subscribe to updates on the current state\n * @returns\n */\nexport const getCollection = (conn, key, fetchCollection, subscribeUpdates, options = { unsubGrace: true, entity_ids: [] }) => {\n    // @ts-ignore\n    if (conn[key]) {\n        // @ts-ignore\n        return conn[key];\n    }\n    let active = 0;\n    let unsubProm;\n    let unsubTimer;\n    let store = createStore();\n    const refresh = () => {\n        if (!fetchCollection) {\n            throw new Error(\"Collection does not support refresh\");\n        }\n        return fetchCollection(conn).then((state) => store.setState(state, true));\n    };\n    const refreshSwallow = () => refresh().catch((err) => {\n        // Swallow errors if socket is connecting, closing or closed.\n        // We will automatically call refresh again when we re-establish the connection.\n        if (conn.connected) {\n            throw err;\n        }\n    });\n    const setupUpdateSubscription = () => {\n        if (unsubTimer !== undefined) {\n            if (DEBUG) {\n                console.log(`Prevented unsubscribe for ${key}`);\n            }\n            clearTimeout(unsubTimer);\n            unsubTimer = undefined;\n            return;\n        }\n        if (DEBUG) {\n            console.log(`Subscribing to ${key}`);\n        }\n        if (subscribeUpdates) {\n            unsubProm = subscribeUpdates(conn, store, options.entity_ids);\n        }\n        if (fetchCollection) {\n            // Fetch when connection re-established.\n            conn.addEventListener(\"ready\", refreshSwallow);\n            refreshSwallow();\n        }\n        conn.addEventListener(\"disconnected\", handleDisconnect);\n    };\n    const teardownUpdateSubscription = () => {\n        if (DEBUG) {\n            console.log(`Unsubscribing from ${key}`);\n        }\n        unsubTimer = undefined;\n        // Unsubscribe from changes\n        if (unsubProm)\n            unsubProm.then((unsub) => {\n                unsub();\n            });\n        store.clearState();\n        conn.removeEventListener(\"ready\", refresh);\n        conn.removeEventListener(\"disconnected\", handleDisconnect);\n    };\n    const scheduleTeardownUpdateSubscription = () => {\n        if (DEBUG) {\n            console.log(`Scheduling unsubscribing from ${key}`);\n        }\n        unsubTimer = setTimeout(teardownUpdateSubscription, UNSUB_GRACE_PERIOD);\n    };\n    const handleDisconnect = () => {\n        // If we're going to unsubscribe and then lose connection,\n        // just unsubscribe immediately.\n        if (unsubTimer) {\n            clearTimeout(unsubTimer);\n            teardownUpdateSubscription();\n        }\n    };\n    // @ts-ignore\n    conn[key] = {\n        get state() {\n            return store.state;\n        },\n        refresh,\n        subscribe(subscriber) {\n            active++;\n            if (DEBUG) {\n                console.log(`New subscriber for ${key}. Active subscribers: ${active}`);\n            }\n            // If this was the first subscriber, attach collection\n            if (active === 1) {\n                setupUpdateSubscription();\n            }\n            const unsub = store.subscribe(subscriber);\n            if (store.state !== undefined) {\n                // Don't call it right away so that caller has time\n                // to initialize all the things.\n                setTimeout(() => subscriber(store.state), 0);\n            }\n            return () => {\n                unsub();\n                active--;\n                if (DEBUG) {\n                    console.log(`Unsubscribe for ${key}. Active subscribers: ${active}`);\n                }\n                if (!active) {\n                    options.unsubGrace\n                        ? scheduleTeardownUpdateSubscription()\n                        : teardownUpdateSubscription();\n                }\n            };\n        },\n    };\n    // @ts-ignore\n    return conn[key];\n};\n// Legacy name. It gets a collection and subscribes.\nexport const createCollection = (key, fetchCollection, subscribeUpdates, conn, onChange) => getCollection(conn, key, fetchCollection, subscribeUpdates).subscribe(onChange);\n","import { getCollection } from \"./collection.js\";\nimport { getStates } from \"./commands.js\";\nimport { atLeastHaVersion } from \"./util.js\";\nfunction processEvent(store, updates) {\n    const state = Object.assign({}, store.state);\n    if (updates.a) {\n        for (const entityId in updates.a) {\n            const newState = updates.a[entityId];\n            let last_changed = new Date(newState.lc * 1000).toISOString();\n            state[entityId] = {\n                entity_id: entityId,\n                state: newState.s,\n                attributes: newState.a,\n                context: typeof newState.c === \"string\"\n                    ? { id: newState.c, parent_id: null, user_id: null }\n                    : newState.c,\n                last_changed: last_changed,\n                last_updated: newState.lu\n                    ? new Date(newState.lu * 1000).toISOString()\n                    : last_changed,\n            };\n        }\n    }\n    if (updates.r) {\n        for (const entityId of updates.r) {\n            delete state[entityId];\n        }\n    }\n    if (updates.c) {\n        for (const entityId in updates.c) {\n            let entityState = state[entityId];\n            if (!entityState) {\n                console.warn(\"Received state update for unknown entity\", entityId);\n                continue;\n            }\n            entityState = Object.assign({}, entityState);\n            const { \"+\": toAdd, \"-\": toRemove } = updates.c[entityId];\n            const attributesChanged = (toAdd === null || toAdd === void 0 ? void 0 : toAdd.a) || (toRemove === null || toRemove === void 0 ? void 0 : toRemove.a);\n            const attributes = attributesChanged\n                ? Object.assign({}, entityState.attributes) : entityState.attributes;\n            if (toAdd) {\n                if (toAdd.s !== undefined) {\n                    entityState.state = toAdd.s;\n                }\n                if (toAdd.c) {\n                    if (typeof toAdd.c === \"string\") {\n                        entityState.context = Object.assign(Object.assign({}, entityState.context), { id: toAdd.c });\n                    }\n                    else {\n                        entityState.context = Object.assign(Object.assign({}, entityState.context), toAdd.c);\n                    }\n                }\n                if (toAdd.lc) {\n                    entityState.last_updated = entityState.last_changed = new Date(toAdd.lc * 1000).toISOString();\n                }\n                else if (toAdd.lu) {\n                    entityState.last_updated = new Date(toAdd.lu * 1000).toISOString();\n                }\n                if (toAdd.a) {\n                    Object.assign(attributes, toAdd.a);\n                }\n            }\n            if (toRemove === null || toRemove === void 0 ? void 0 : toRemove.a) {\n                for (const key of toRemove.a) {\n                    delete attributes[key];\n                }\n            }\n            if (attributesChanged) {\n                entityState.attributes = attributes;\n            }\n            state[entityId] = entityState;\n        }\n    }\n    store.setState(state, true);\n}\nconst subscribeUpdates = (conn, store, entity_ids=[]) => {\n    conn.subscribeMessage((ev) => processEvent(store, ev), {\n        type: \"subscribe_entities\",\n        entity_ids: entity_ids,\n    });\n}\nfunction legacyProcessEvent(store, event) {\n    const state = store.state;\n    if (state === undefined)\n        return;\n    const { entity_id, new_state } = event.data;\n    if (new_state) {\n        store.setState({ [new_state.entity_id]: new_state });\n    }\n    else {\n        const newEntities = Object.assign({}, state);\n        delete newEntities[entity_id];\n        store.setState(newEntities, true);\n    }\n}\nasync function legacyFetchEntities(conn) {\n    const states = await getStates(conn);\n    const entities = {};\n    for (let i = 0; i < states.length; i++) {\n        const state = states[i];\n        entities[state.entity_id] = state;\n    }\n    return entities;\n}\nconst legacySubscribeUpdates = (conn, store) => conn.subscribeEvents((ev) => legacyProcessEvent(store, ev), \"state_changed\");\nexport const entitiesColl = (conn, entity_ids=[]) => atLeastHaVersion(conn.haVersion, 2022, 4, 0)\n    ? getCollection(conn, \"_ent\", undefined, subscribeUpdates, {unsubGrace: true, entity_ids: entity_ids})\n    : getCollection(conn, \"_ent\", legacyFetchEntities, legacySubscribeUpdates);\nexport const subscribeEntities = (conn, onChange, entity_ids=[]) => entitiesColl(conn, entity_ids).subscribe(onChange)\n","export const ERR_CANNOT_CONNECT = 1;\nexport const ERR_INVALID_AUTH = 2;\nexport const ERR_CONNECTION_LOST = 3;\nexport const ERR_HASS_HOST_REQUIRED = 4;\nexport const ERR_INVALID_HTTPS_TO_HTTP = 5;\nexport const ERR_INVALID_AUTH_CALLBACK = 6;\n","/**\n * Create a web socket connection with a Home Assistant instance.\n */\nimport { ERR_INVALID_AUTH, ERR_CANNOT_CONNECT, ERR_HASS_HOST_REQUIRED, } from \"./errors.js\";\nimport * as messages from \"./messages.js\";\nimport { atLeastHaVersion } from \"./util.js\";\nconst DEBUG = false;\nexport const MSG_TYPE_AUTH_REQUIRED = \"auth_required\";\nexport const MSG_TYPE_AUTH_INVALID = \"auth_invalid\";\nexport const MSG_TYPE_AUTH_OK = \"auth_ok\";\nexport function createSocket(options) {\n    if (!options.auth) {\n        throw ERR_HASS_HOST_REQUIRED;\n    }\n    const auth = options.auth;\n    // Start refreshing expired tokens even before the WS connection is open.\n    // We know that we will need auth anyway.\n    let authRefreshTask = auth.expired\n        ? auth.refreshAccessToken().then(() => {\n            authRefreshTask = undefined;\n        }, () => {\n            authRefreshTask = undefined;\n        })\n        : undefined;\n    // Convert from http:// -> ws://, https:// -> wss://\n    const url = auth.wsUrl;\n    if (DEBUG) {\n        console.log(\"[Auth phase] Initializing\", url);\n    }\n    function connect(triesLeft, promResolve, promReject) {\n        if (DEBUG) {\n            console.log(\"[Auth Phase] New connection\", url);\n        }\n        const socket = new WebSocket(url);\n        // If invalid auth, we will not try to reconnect.\n        let invalidAuth = false;\n        const closeMessage = () => {\n            // If we are in error handler make sure close handler doesn't also fire.\n            socket.removeEventListener(\"close\", closeMessage);\n            if (invalidAuth) {\n                promReject(ERR_INVALID_AUTH);\n                return;\n            }\n            // Reject if we no longer have to retry\n            if (triesLeft === 0) {\n                // We never were connected and will not retry\n                promReject(ERR_CANNOT_CONNECT);\n                return;\n            }\n            const newTries = triesLeft === -1 ? -1 : triesLeft - 1;\n            // Try again in a second\n            setTimeout(() => connect(newTries, promResolve, promReject), 1000);\n        };\n        // Auth is mandatory, so we can send the auth message right away.\n        const handleOpen = async (event) => {\n            try {\n                if (auth.expired) {\n                    await (authRefreshTask ? authRefreshTask : auth.refreshAccessToken());\n                }\n                socket.send(JSON.stringify(messages.auth(auth.accessToken)));\n            }\n            catch (err) {\n                // Refresh token failed\n                invalidAuth = err === ERR_INVALID_AUTH;\n                socket.close();\n            }\n        };\n        const handleMessage = async (event) => {\n            const message = JSON.parse(event.data);\n            if (DEBUG) {\n                console.log(\"[Auth phase] Received\", message);\n            }\n            switch (message.type) {\n                case MSG_TYPE_AUTH_INVALID:\n                    invalidAuth = true;\n                    socket.close();\n                    break;\n                case MSG_TYPE_AUTH_OK:\n                    socket.removeEventListener(\"open\", handleOpen);\n                    socket.removeEventListener(\"message\", handleMessage);\n                    socket.removeEventListener(\"close\", closeMessage);\n                    socket.removeEventListener(\"error\", closeMessage);\n                    socket.haVersion = message.ha_version;\n                    if (atLeastHaVersion(socket.haVersion, 2022, 9)) {\n                        socket.send(JSON.stringify(messages.supportedFeatures()));\n                    }\n                    promResolve(socket);\n                    break;\n                default:\n                    if (DEBUG) {\n                        // We already send response to this message when socket opens\n                        if (message.type !== MSG_TYPE_AUTH_REQUIRED) {\n                            console.warn(\"[Auth phase] Unhandled message\", message);\n                        }\n                    }\n            }\n        };\n        socket.addEventListener(\"open\", handleOpen);\n        socket.addEventListener(\"message\", handleMessage);\n        socket.addEventListener(\"close\", closeMessage);\n        socket.addEventListener(\"error\", closeMessage);\n    }\n    return new Promise((resolve, reject) => connect(options.setupRetry, resolve, reject));\n}\n","/**\n * Connection that wraps a socket and provides an interface to interact with\n * the Home Assistant websocket API.\n */\nimport * as messages from \"./messages.js\";\nimport { ERR_INVALID_AUTH, ERR_CONNECTION_LOST } from \"./errors.js\";\nconst DEBUG = false;\nexport class Connection {\n    constructor(socket, options) {\n        this._handleMessage = (event) => {\n            let messageGroup = JSON.parse(event.data);\n            if (!Array.isArray(messageGroup)) {\n                messageGroup = [messageGroup];\n            }\n            messageGroup.forEach((message) => {\n                if (DEBUG) {\n                    console.log(\"Received\", message);\n                }\n                const info = this.commands.get(message.id);\n                switch (message.type) {\n                    case \"event\":\n                        if (info) {\n                            info.callback(message.event);\n                        }\n                        else {\n                            console.warn(`Received event for unknown subscription ${message.id}. Unsubscribing.`);\n                            this.sendMessagePromise(messages.unsubscribeEvents(message.id)).catch((err) => {\n                                if (DEBUG) {\n                                    console.warn(` Error unsubsribing from unknown subscription ${message.id}`, err);\n                                }\n                            });\n                        }\n                        break;\n                    case \"result\":\n                        // No info is fine. If just sendMessage is used, we did not store promise for result\n                        if (info) {\n                            if (message.success) {\n                                info.resolve(message.result);\n                                // Don't remove subscriptions.\n                                if (!(\"subscribe\" in info)) {\n                                    this.commands.delete(message.id);\n                                }\n                            }\n                            else {\n                                info.reject(message.error);\n                                this.commands.delete(message.id);\n                            }\n                        }\n                        break;\n                    case \"pong\":\n                        if (info) {\n                            info.resolve();\n                            this.commands.delete(message.id);\n                        }\n                        else {\n                            console.warn(`Received unknown pong response ${message.id}`);\n                        }\n                        break;\n                    default:\n                        if (DEBUG) {\n                            console.warn(\"Unhandled message\", message);\n                        }\n                }\n            });\n        };\n        this._handleClose = async () => {\n            const oldCommands = this.commands;\n            // reset to original state except haVersion\n            this.commandId = 1;\n            this.oldSubscriptions = this.commands;\n            this.commands = new Map();\n            this.socket = undefined;\n            // Reject in-flight sendMessagePromise requests\n            oldCommands.forEach((info) => {\n                // We don't cancel subscribeEvents commands in flight\n                // as we will be able to recover them.\n                if (!(\"subscribe\" in info)) {\n                    info.reject(messages.error(ERR_CONNECTION_LOST, \"Connection lost\"));\n                }\n            });\n            if (this.closeRequested) {\n                return;\n            }\n            this.fireEvent(\"disconnected\");\n            // Disable setupRetry, we control it here with auto-backoff\n            const options = Object.assign(Object.assign({}, this.options), { setupRetry: 0 });\n            const reconnect = (tries) => {\n                setTimeout(async () => {\n                    if (this.closeRequested) {\n                        return;\n                    }\n                    if (DEBUG) {\n                        console.log(\"Trying to reconnect\");\n                    }\n                    try {\n                        const socket = await options.createSocket(options);\n                        this._setSocket(socket);\n                    }\n                    catch (err) {\n                        if (this._queuedMessages) {\n                            const queuedMessages = this._queuedMessages;\n                            this._queuedMessages = undefined;\n                            for (const msg of queuedMessages) {\n                                if (msg.reject) {\n                                    msg.reject(ERR_CONNECTION_LOST);\n                                }\n                            }\n                        }\n                        if (err === ERR_INVALID_AUTH) {\n                            this.fireEvent(\"reconnect-error\", err);\n                        }\n                        else {\n                            reconnect(tries + 1);\n                        }\n                    }\n                }, Math.min(tries, 5) * 1000);\n            };\n            if (this.suspendReconnectPromise) {\n                await this.suspendReconnectPromise;\n                this.suspendReconnectPromise = undefined;\n                // For the first retry after suspend, we will queue up\n                // all messages.\n                this._queuedMessages = [];\n            }\n            reconnect(0);\n        };\n        // connection options\n        //  - setupRetry: amount of ms to retry when unable to connect on initial setup\n        //  - createSocket: create a new Socket connection\n        this.options = options;\n        // id if next command to send\n        this.commandId = 2; // socket may send 1 at the start to enable features\n        // info about active subscriptions and commands in flight\n        this.commands = new Map();\n        // map of event listeners\n        this.eventListeners = new Map();\n        // true if a close is requested by the user\n        this.closeRequested = false;\n        this._setSocket(socket);\n    }\n    get connected() {\n        // Using conn.socket.OPEN instead of WebSocket for better node support\n        return (this.socket !== undefined && this.socket.readyState == this.socket.OPEN);\n    }\n    _setSocket(socket) {\n        this.socket = socket;\n        this.haVersion = socket.haVersion;\n        socket.addEventListener(\"message\", this._handleMessage);\n        socket.addEventListener(\"close\", this._handleClose);\n        const oldSubscriptions = this.oldSubscriptions;\n        if (oldSubscriptions) {\n            this.oldSubscriptions = undefined;\n            oldSubscriptions.forEach((info) => {\n                if (\"subscribe\" in info && info.subscribe) {\n                    info.subscribe().then((unsub) => {\n                        info.unsubscribe = unsub;\n                        // We need to resolve this in case it wasn't resolved yet.\n                        // This allows us to subscribe while we're disconnected\n                        // and recover properly.\n                        info.resolve();\n                    });\n                }\n            });\n        }\n        const queuedMessages = this._queuedMessages;\n        if (queuedMessages) {\n            this._queuedMessages = undefined;\n            for (const queuedMsg of queuedMessages) {\n                queuedMsg.resolve();\n            }\n        }\n        this.fireEvent(\"ready\");\n    }\n    addEventListener(eventType, callback) {\n        let listeners = this.eventListeners.get(eventType);\n        if (!listeners) {\n            listeners = [];\n            this.eventListeners.set(eventType, listeners);\n        }\n        listeners.push(callback);\n    }\n    removeEventListener(eventType, callback) {\n        const listeners = this.eventListeners.get(eventType);\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(callback);\n        if (index !== -1) {\n            listeners.splice(index, 1);\n        }\n    }\n    fireEvent(eventType, eventData) {\n        (this.eventListeners.get(eventType) || []).forEach((callback) => callback(this, eventData));\n    }\n    suspendReconnectUntil(suspendPromise) {\n        this.suspendReconnectPromise = suspendPromise;\n    }\n    suspend() {\n        if (!this.suspendReconnectPromise) {\n            throw new Error(\"Suspend promise not set\");\n        }\n        if (this.socket) {\n            this.socket.close();\n        }\n    }\n    /**\n     * Reconnect the websocket connection.\n     * @param force discard old socket instead of gracefully closing it.\n     */\n    reconnect(force = false) {\n        if (!this.socket) {\n            return;\n        }\n        if (!force) {\n            this.socket.close();\n            return;\n        }\n        this.socket.removeEventListener(\"message\", this._handleMessage);\n        this.socket.removeEventListener(\"close\", this._handleClose);\n        this.socket.close();\n        this._handleClose();\n    }\n    close() {\n        this.closeRequested = true;\n        if (this.socket) {\n            this.socket.close();\n        }\n    }\n    /**\n     * Subscribe to a specific or all events.\n     *\n     * @param callback Callback  to be called when a new event fires\n     * @param eventType\n     * @returns promise that resolves to an unsubscribe function\n     */\n    async subscribeEvents(callback, eventType) {\n        return this.subscribeMessage(callback, messages.subscribeEvents(eventType));\n    }\n    ping() {\n        return this.sendMessagePromise(messages.ping());\n    }\n    sendMessage(message, commandId) {\n        if (!this.connected) {\n            throw ERR_CONNECTION_LOST;\n        }\n        if (DEBUG) {\n            console.log(\"Sending\", message);\n        }\n        if (this._queuedMessages) {\n            if (commandId) {\n                throw new Error(\"Cannot queue with commandId\");\n            }\n            this._queuedMessages.push({ resolve: () => this.sendMessage(message) });\n            return;\n        }\n        if (!commandId) {\n            commandId = this._genCmdId();\n        }\n        message.id = commandId;\n        this.socket.send(JSON.stringify(message));\n    }\n    sendMessagePromise(message) {\n        return new Promise((resolve, reject) => {\n            if (this._queuedMessages) {\n                this._queuedMessages.push({\n                    reject,\n                    resolve: async () => {\n                        try {\n                            resolve(await this.sendMessagePromise(message));\n                        }\n                        catch (err) {\n                            reject(err);\n                        }\n                    },\n                });\n                return;\n            }\n            const commandId = this._genCmdId();\n            this.commands.set(commandId, { resolve, reject });\n            this.sendMessage(message, commandId);\n        });\n    }\n    /**\n     * Call a websocket command that starts a subscription on the backend.\n     *\n     * @param message the message to start the subscription\n     * @param callback the callback to be called when a new item arrives\n     * @param [options.resubscribe] re-established a subscription after a reconnect. Defaults to true.\n     * @returns promise that resolves to an unsubscribe function\n     */\n    async subscribeMessage(callback, subscribeMessage, options) {\n        if (this._queuedMessages) {\n            await new Promise((resolve, reject) => {\n                this._queuedMessages.push({ resolve, reject });\n            });\n        }\n        let info;\n        await new Promise((resolve, reject) => {\n            // Command ID that will be used\n            const commandId = this._genCmdId();\n            // We store unsubscribe on info object. That way we can overwrite it in case\n            // we get disconnected and we have to subscribe again.\n            info = {\n                resolve,\n                reject,\n                callback,\n                subscribe: (options === null || options === void 0 ? void 0 : options.resubscribe) !== false\n                    ? () => this.subscribeMessage(callback, subscribeMessage)\n                    : undefined,\n                unsubscribe: async () => {\n                    // No need to unsubscribe if we're disconnected\n                    if (this.connected) {\n                        await this.sendMessagePromise(messages.unsubscribeEvents(commandId));\n                    }\n                    this.commands.delete(commandId);\n                },\n            };\n            this.commands.set(commandId, info);\n            try {\n                this.sendMessage(subscribeMessage, commandId);\n            }\n            catch (err) {\n                // Happens when the websocket is already closing.\n                // Don't have to handle the error, reconnect logic will pick it up.\n            }\n        });\n        return () => info.unsubscribe();\n    }\n    _genCmdId() {\n        return ++this.commandId;\n    }\n}\n","// JS extensions in imports allow tsc output to be consumed by browsers.\nimport { createSocket } from \"./socket.js\";\nimport { Connection } from \"./connection.js\";\nexport * from \"./auth.js\";\nexport * from \"./collection.js\";\nexport * from \"./connection.js\";\nexport * from \"./config.js\";\nexport * from \"./services.js\";\nexport * from \"./entities.js\";\nexport * from \"./errors.js\";\nexport * from \"./socket.js\";\nexport * from \"./types.js\";\nexport * from \"./commands.js\";\nexport async function createConnection(options) {\n    const connOptions = Object.assign({ setupRetry: 0, createSocket }, options);\n    const socket = await connOptions.createSocket(connOptions);\n    const conn = new Connection(socket, connOptions);\n    return conn;\n}\n","export function auth(accessToken) {\n    return {\n        type: \"auth\",\n        access_token: accessToken,\n    };\n}\nexport function supportedFeatures() {\n    return {\n        type: \"supported_features\",\n        id: 1, // Always the first message after auth\n        features: { coalesce_messages: 1 },\n    };\n}\nexport function states() {\n    return {\n        type: \"get_states\",\n    };\n}\nexport function config() {\n    return {\n        type: \"get_config\",\n    };\n}\nexport function services() {\n    return {\n        type: \"get_services\",\n    };\n}\nexport function user() {\n    return {\n        type: \"auth/current_user\",\n    };\n}\nexport function callService(domain, service, serviceData, target, returnResponse) {\n    const message = {\n        type: \"call_service\",\n        domain,\n        service,\n        target,\n        return_response: returnResponse,\n    };\n    if (serviceData) {\n        message.service_data = serviceData;\n    }\n    return message;\n}\nexport function subscribeEvents(eventType) {\n    const message = {\n        type: \"subscribe_events\",\n    };\n    if (eventType) {\n        message.event_type = eventType;\n    }\n    return message;\n}\nexport function unsubscribeEvents(subscription) {\n    return {\n        type: \"unsubscribe_events\",\n        subscription,\n    };\n}\nexport function ping() {\n    return {\n        type: \"ping\",\n    };\n}\nexport function error(code, message) {\n    return {\n        type: \"result\",\n        success: false,\n        error: {\n            code,\n            message,\n        },\n    };\n}\n","export function parseQuery(queryString) {\n    const query = {};\n    const items = queryString.split(\"&\");\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i].split(\"=\");\n        const key = decodeURIComponent(item[0]);\n        const value = item.length > 1 ? decodeURIComponent(item[1]) : undefined;\n        query[key] = value;\n    }\n    return query;\n}\n// From: https://davidwalsh.name/javascript-debounce-function\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n// eslint-disable-next-line: ban-types\nexport const debounce = (func, wait, immediate = false) => {\n    let timeout;\n    // @ts-ignore\n    return function (...args) {\n        // @ts-ignore\n        const context = this;\n        const later = () => {\n            timeout = undefined;\n            if (!immediate) {\n                func.apply(context, args);\n            }\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) {\n            func.apply(context, args);\n        }\n    };\n};\nexport const atLeastHaVersion = (version, major, minor, patch) => {\n    const [haMajor, haMinor, haPatch] = version.split(\".\", 3);\n    return (Number(haMajor) > major ||\n        (Number(haMajor) === major &&\n            (patch === undefined\n                ? Number(haMinor) >= minor\n                : Number(haMinor) > minor)) ||\n        (patch !== undefined &&\n            Number(haMajor) === major &&\n            Number(haMinor) === minor &&\n            Number(haPatch) >= patch));\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(564);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","closeModal","document","getElementById","classList","add","addEventListener","timeout","lastTap","event","currentTime","Date","getTime","tapLength","preventDefault","doubleTap","CustomEvent","bubbles","detail","target","dispatchEvent","setTimeout","clearTimeout","detectDoubleTap","remove","ev","action","dataset","undefined","closest","forEach","id","connection","entity_id","unsubEntities","entIds","async","authenticate","auth","authOptions","loadTokens","JSON","parse","localStorage","hassTokens","err","saveTokens","tokens","stringify","alert","hassUrl","prompt","window","console","log","location","search","includes","history","replaceState","pathname","then","user","setMaxMinContent","selector","entity","querySelectorAll","el","textContent","state","time","last_changed","h","getHours","m","getMinutes","addLeadingZeros","replace","processEntity","entities","entId","querySelector","checkTimedOut","updateRain","renderEntities","firstRun","playing","Object","values","setDateTime","today","dateString","getDate","getMonth","getFullYear","innerHTML","i","date","timedOut","now","rain","rainRate","val","style","display","setupEntitiesSubscription","Promise","resolve","setInterval","HA_INSTANCE","HA_SECRET","scrollTo","progressTimer","showMediaPlayer","mediaplayer","player_id","attributes","entity_picture","backgroundImage","app_name","media_title","value","volume_level","clearInterval","max","media_duration","media_position","parseFloat","parent","mediaControlWrapper","domain","data","Math","min","src","genClientId","protocol","host","genExpires","expires_in","tokenRequest","clientId","l","a","createElement","href","hostname","formData","FormData","append","keys","key","resp","fetch","method","credentials","body","ok","status","Error","json","expires","fetchToken","code","grant_type","Auth","constructor","this","_saveTokens","wsUrl","substr","accessToken","access_token","expired","refreshAccessToken","refresh_token","revoke","createLongLivedTokenAuth","getAuth","options","length","limitHassInstance","authCode","query","encoded","atob","redirectUrl","authorizeUrl","encodeURIComponent","genAuthorizeUrl","redirectAuthorize","genRedirectUrl","btoa","getStates","sendMessagePromise","getUser","callService","service","serviceData","returnResponse","createStore","listeners","setState","update","overwrite","assign","currentListeners","apply","result","args","arguments","push","ret","clearState","subscribe","listener","out","unsubscribe","getCollection","conn","fetchCollection","subscribeUpdates","unsubGrace","entity_ids","unsubProm","unsubTimer","active","store","refresh","refreshSwallow","catch","connected","teardownUpdateSubscription","unsub","removeEventListener","handleDisconnect","subscriber","setupUpdateSubscription","subscribeMessage","updates","entityId","newState","lc","toISOString","s","context","c","parent_id","user_id","last_updated","lu","r","entityState","warn","toAdd","toRemove","attributesChanged","processEvent","type","legacyFetchEntities","states","legacySubscribeUpdates","subscribeEvents","new_state","newEntities","legacyProcessEvent","subscribeEntities","onChange","haVersion","entitiesColl","ERR_CANNOT_CONNECT","ERR_INVALID_AUTH","ERR_CONNECTION_LOST","ERR_HASS_HOST_REQUIRED","ERR_INVALID_HTTPS_TO_HTTP","ERR_INVALID_AUTH_CALLBACK","DEBUG","MSG_TYPE_AUTH_REQUIRED","MSG_TYPE_AUTH_INVALID","MSG_TYPE_AUTH_OK","createSocket","authRefreshTask","url","connect","triesLeft","promResolve","promReject","socket","WebSocket","invalidAuth","closeMessage","newTries","handleOpen","send","messages","close","handleMessage","message","ha_version","reject","setupRetry","Connection","_handleMessage","messageGroup","Array","isArray","info","commands","get","callback","success","delete","error","_handleClose","oldCommands","commandId","oldSubscriptions","Map","closeRequested","fireEvent","reconnect","tries","_setSocket","_queuedMessages","queuedMessages","msg","suspendReconnectPromise","eventListeners","readyState","OPEN","queuedMsg","eventType","set","index","indexOf","splice","eventData","suspendReconnectUntil","suspendPromise","suspend","force","ping","sendMessage","_genCmdId","resubscribe","createConnection","connOptions","supportedFeatures","features","coalesce_messages","return_response","service_data","event_type","unsubscribeEvents","subscription","parseQuery","queryString","items","split","item","decodeURIComponent","atLeastHaVersion","version","major","minor","patch","haMajor","haMinor","haPatch","Number","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","Symbol","queue","d","fn","hasAwait","currentDeps","outerResolve","depQueues","Set","promise","rej","x","deps","map","dep","obj","e","wrapDeps","getResult","fnQueue","q","has","definition","o","defineProperty","enumerable","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}