{"version":3,"file":"main.min.js","mappings":"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","sources":["webpack://main/webpack/runtime/async module","webpack://main/./actions.js","webpack://main/./main.js","webpack://main/./media_player.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/auth.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/commands.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/store.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/collection.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/entities.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/errors.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/socket.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/connection.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/index.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/messages.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/util.js","webpack://main/webpack/bootstrap","webpack://main/webpack/runtime/define property getters","webpack://main/webpack/runtime/hasOwnProperty shorthand","webpack://main/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","import {\r\n    callService\r\n} from \"home-assistant-js-websocket\";\r\n\r\n/* Based on ethanny2 solution: https://gist.github.com/ethanny2/44d5ad69970596e96e0b48139b89154b */\r\nfunction detectDoubleTap(doubleTapMs) {\r\n    let timeout, lastTap = 0;\r\n\r\n    return function detectDoubleTap(event) {\r\n        const currentTime = new Date().getTime();\r\n        const tapLength   = currentTime - lastTap;\r\n\r\n        if (0 < tapLength && tapLength < doubleTapMs) {\r\n            event.preventDefault();\r\n\r\n            const doubleTap = new CustomEvent(\"doubletap\", {\r\n                bubbles: true,\r\n                detail: event\r\n            });\r\n\r\n            event.target.dispatchEvent(doubleTap)\r\n        } else {\r\n            timeout = setTimeout(() => clearTimeout(timeout), doubleTapMs)\r\n        }\r\n        lastTap = currentTime\r\n    }\r\n}\r\n\r\n// initialize the new event\r\ndocument.addEventListener('pointerup', detectDoubleTap(500));\r\n\r\n// Listen to two taps on the screen and turn change the lights\r\ndocument.addEventListener('doubletap', () => {\r\n    document.getElementById('popup').classList.remove('hidden');\r\n});\r\n\r\ndocument.addEventListener('click', async ev =>{\r\n    let target  = ev.target;\r\n    let domain  = target.dataset.domain;\r\n    let action  = target.dataset.action;\r\n    let id      = target.dataset.id;\r\n\r\n    if(target.closest('.modal-close') != undefined){\r\n        document.getElementById('popup').classList.add('hidden');\r\n\r\n        closeModal();\r\n    }else if(target.matches(`.tablink`)){\r\n        let curActive   = document.querySelector(`.tablink.active`);\r\n        document.querySelector(`#${curActive.dataset.target}`).classList.add('hidden');\r\n        curActive.classList.remove('active');\r\n        target.classList.add('active');\r\n        document.querySelector(`#${target.dataset.target}`).classList.remove('hidden');\r\n    }\r\n\r\n    if(action != undefined){\r\n\r\n        callService(window.connection, domain, action, {\r\n            entity_id: id,\r\n        });\r\n\r\n        if(action == 'turn_on'){\r\n            target.dataset.action = 'turn_off';\r\n        }else if(action == 'turn_off'){\r\n            target.dataset.action = 'turn_on';\r\n        }\r\n\r\n        await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n        closeModal();\r\n    }\r\n});\r\n\r\ndocument.addEventListener('change', ev =>{\r\n    let target  = ev.target;\r\n\r\n    let selectedOption  = target.options[target.selectedIndex];\r\n\r\n    \r\n\r\n    console.log(selectedOption);\r\n\r\n    let domain  = selectedOption.dataset.domain;\r\n    let action  = selectedOption.dataset.action;\r\n    let id      = selectedOption.dataset.id;\r\n\r\n    callService(window.connection, domain, action, {\r\n        entity_id: id,\r\n    });\r\n});\r\n\r\nfunction closeModal(){\r\n    document.getElementById('popup').classList.add('hidden');\r\n}","import {\r\n    createLongLivedTokenAuth,\r\n    getAuth,\r\n    getUser,\r\n    createConnection,\r\n    subscribeEntities,\r\n    ERR_HASS_HOST_REQUIRED,\r\n    getStates\r\n} from \"home-assistant-js-websocket\";\r\n\r\nimport './secrets.js';\r\nimport './actions.js';\r\nimport {showMediaPlayer} from './media_player.js';\r\n\r\nlet unsubEntities;\r\n \r\n// Only check the ones we are interested in \r\nvar entIds          = [\r\n    'sensor.pws_temperature',\r\n    'sensor.pws_temperature_indoor',\r\n    'sensor.pws_humidity_indoor',\r\n    'sensor.pws_humidity',\r\n    'sensor.maximum_temperature_outside',\r\n    'sensor.minimum_temperature_outside',\r\n    'sensor.maximum_temperature_inside',\r\n    'sensor.minimum_temperature_inside',\r\n    'sensor.pws_rain',\r\n    'sensor.pws_rainrate',\r\n    'media_player.allemaal',\r\n    'media_player.keuken',\r\n    'media_player.woonkamer',\r\n    'switch.woonkamer_lamp_switch_0' \r\n];\r\n\r\nasync function authenticate(){\r\n    let auth;\r\n    const storeAuth     = true;\r\n    const authOptions   = storeAuth\r\n    ? {\r\n        async loadTokens() {\r\n            try {\r\n                return JSON.parse(localStorage.hassTokens);\r\n            } catch (err) {\r\n                return undefined;\r\n            }\r\n        },\r\n        saveTokens: (tokens) => {\r\n            localStorage.hassTokens = JSON.stringify(tokens);\r\n        },\r\n    }\r\n    : {};\r\n\r\n    try {\r\n        auth            = await getAuth(authOptions);\r\n    } catch (err) {\r\n        if (err === ERR_HASS_HOST_REQUIRED) {\r\n            authOptions.hassUrl = prompt(\r\n                \"What host to connect to?\",\r\n                \"http://localhost:8123\",\r\n            );\r\n\r\n            if (!authOptions.hassUrl) return;\r\n\r\n            auth            = await getAuth(authOptions);\r\n        } else {\r\n            alert(`Unknown error: ${err}`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    window.connection = await createConnection({ auth });\r\n    \r\n    for (const ev of [\"disconnected\", \"ready\", \"reconnect-error\"]) {\r\n        window.connection.addEventListener(ev, () => console.log(`Event: ${ev}`));\r\n    }\r\n\r\n    // Clear url if we have been able to establish a connection\r\n    if (location.search.includes(\"auth_callback=1\")) {\r\n        history.replaceState(null, \"\", location.pathname);\r\n    }\r\n\r\n    // To play from the console\r\n    window.auth         = auth;\r\n\r\n    getUser(window.connection).then((user) => {\r\n        console.log(\"Logged in as\", user);\r\n        window.user = user;\r\n    });\r\n}\r\n\r\nfunction setMaxMinContent(selector, entity){\r\n    document.querySelectorAll(selector).forEach(el => el.textContent   =   entity.state + '°');\r\n\r\n    let time        = new Date(entity.last_changed);\r\n    let h           = time.getHours();\r\n    let m           = time.getMinutes();\r\n    m               = addLeadingZeros(m);\r\n    document.querySelectorAll(selector.replace('-temp', '-time')).forEach(el => el.textContent   =   `${h}:${m}`);  \r\n}\r\n\r\nfunction processEntity(entity, entities){\r\n    let entId   = entity.entity_id;\r\n\r\n    // Temperatures\r\n    if( entId == 'sensor.pws_temperature'){\r\n        document.querySelector(`#outside .tempwrapper .temp`).textContent = entity.state;\r\n\r\n        checkTimedOut(entity, `#outside .tempwrapper .temp`);\r\n    }else if( entId == 'sensor.pws_temperature_indoor'){\r\n        document.querySelector(`#inside .tempwrapper .temp`).textContent = entity.state;\r\n\r\n        checkTimedOut(entity, `#inside .tempwrapper .temp`);\r\n    }\r\n\r\n    // Humidity\r\n    else if( entId == 'sensor.pws_humidity'){\r\n        document.querySelector(`#outside .humwrapper .hum`).textContent = entity.state;\r\n    }else if( entId == 'sensor.pws_humidity_indoor'){\r\n        document.querySelector(`#inside .humwrapper .hum`).textContent = entity.state;\r\n    }\r\n    \r\n    // Max Temps\r\n    else if( entId == 'sensor.maximum_temperature_outside'){\r\n        setMaxMinContent('#outside .max .max-temp', entity);\r\n    }else if( entId == 'sensor.maximum_temperature_inside'){\r\n        setMaxMinContent('#inside .max .max-temp', entity); \r\n    }\r\n    \r\n    // Min temps\r\n    else if( entId == 'sensor.minimum_temperature_outside'){\r\n        setMaxMinContent('#outside .min .min-temp', entity);\r\n    }else if( entId == 'sensor.minimum_temperature_inside'){\r\n        setMaxMinContent('#inside .min .min-temp', entity); \r\n    }\r\n    \r\n    // Rain\r\n    else if( entId == 'sensor.pws_rain'){\r\n        updateRain(entity.state, entities['sensor.pws_rainrate']);\r\n    }else if( entId == 'sensor.pws_rainrate'){\r\n        updateRain(entities['sensor.pws_rain'], entity.state);\r\n    }\r\n}\r\n\r\n// Display the received entities\r\nfunction renderEntities(connection, entities) {\r\n    let firstRun    = false;\r\n\r\n    if(window.entities == undefined){\r\n        window.entities = entities;\r\n        firstRun        = true;\r\n    }\r\n\r\n    // Loop over the entities we are interested in\r\n    let playing = false;\r\n\r\n    Object.values(entities).forEach(entity => {\r\n        // Only do something if needed\r\n        if(entity.state != window.entities[entity.entity_id].state || firstRun){\r\n            processEntity(entity, entities);\r\n        }\r\n\r\n        // Check if we are playing no matter if it is changed or not\r\n        if( entity.entity_id.includes( 'media_player' ) && ( entity.state == 'playing' || entity.state == 'buffering' || entity.state == 'paused')){\r\n            playing = true;\r\n            showMediaPlayer(entity);\r\n        }\r\n    });\r\n\r\n    // Store the updated entities\r\n    window.entities = entities;\r\n\r\n    // Show main container again if we are not playing and there is an iframe\r\n    if( !playing){\r\n        console.log('Hiding Media player');\r\n\r\n        // hide all\r\n        document.querySelector('#mediaplayer').classList.add('hidden');\r\n\r\n        document.querySelector('#container').classList.remove('hidden');\r\n    }\r\n}\r\n  \r\n/**\r\n * Updates the date and time on the header\r\n */\r\nfunction setDateTime() {\r\n    const today     = new Date();\r\n    let h           = today.getHours();\r\n    let m           = today.getMinutes();\r\n    m               = addLeadingZeros(m);\r\n\r\n    let dateString  = `${today.getDate()}-${today.getMonth()+1}-${today.getFullYear()}`;\r\n\r\n    if(document.getElementById('clock').innerHTML !=  h + \":\" + m){\r\n        document.getElementById('clock').innerHTML =  h + \":\" + m;\r\n    }\r\n\r\n    if(document.getElementById('date').innerHTML !=  dateString){\r\n        document.getElementById('date').innerHTML =  dateString;\r\n    }\r\n}\r\n\r\n/**\r\n * Adds a zero to numbers below 10\r\n * \r\n * @param {integer} i the number to check\r\n * \r\n * @returns {string}    number with leading zeros if needed\r\n */\r\nfunction addLeadingZeros(i) {\r\n    if (i < 10) {i = \"0\" + i};  // add zero in front of numbers < 10\r\n\r\n    return i;\r\n}\r\n\r\n/**\r\n * Check if a device is not updated in a while\r\n * @param {object}  entity      The home assistant enity\r\n * @param {string}  selector    The queryselector\r\n */\r\nfunction checkTimedOut(entity, selector){\r\n    let date        = Date.parse(entity.last_changed);\r\n\r\n    let minutes     = ( Date.now() - date ) / 1000 / 60;\r\n\r\n    let timedOut    = false;\r\n\r\n    if(minutes > 180){\r\n        timedOut    = true;\r\n    }\r\n\r\n    if(timedOut){\r\n        document.querySelector(selector).classList.add('timedout');\r\n    }else{\r\n        document.querySelector(selector).classList.remove('timedout');\r\n    }\r\n}\r\n\r\n/**\r\n * Updates the display of the rain\r\n */\r\nfunction updateRain(rain, rainRate){\r\n    if(rain == 0){\r\n        return;\r\n    }\r\n\r\n    let el  = document.getElementById('rain');\r\n\r\n    let val = `<img src='rain.png' width='70px'>`;\r\n\r\n    if(rainRate > 0){\r\n        val += `${rainRate}mm/h`;\r\n    }else if(rain > 0){\r\n        val += `${rain}mm`;\r\n    }else{\r\n        val = ``;\r\n    }\r\n\r\n    if(el.innerHTML !=  val){\r\n        el.innerHTML =  val;\r\n\r\n        if(val == ''){\r\n            el.style.display = 'none';\r\n            document.getElementById('date').style.display = 'block';\r\n        }else{\r\n            el.style.display = 'block';\r\n            document.getElementById('date').style.display = 'none';\r\n        }\r\n    }\r\n}\r\n\r\nasync function addButtons(){\r\n    let entitytlist = await getStates(window.connection);\r\n\r\n    let wrapper = document.querySelector(`#popup .modal-content`);\r\n    let types   = ['select', 'switch', 'remote', 'button', 'scene'];\r\n    let html;\r\n\r\n    for (const [key, entity] of Object.entries(entitytlist)) {\r\n        html        = '';\r\n\r\n        let domain  = entity.entity_id.split('.')[0];\r\n        let action;\r\n\r\n        if(types.includes(domain)){\r\n            if(entity.state != 'unknown' && entity.state != 'unavailable'){\r\n\r\n                if(domain == 'select'){\r\n                    html =`\r\n                        ${entity.attributes.friendly_name}\r\n                        <select>`;\r\n\r\n                    for (let i = 0; i < entity.attributes.options.length; i++) {\r\n                        html    += `<option data-domain='${domain}' data-action='${entity.attributes.options[i]}' data-id='${entity.entity_id}'>${entity.attributes.options[i]}</option>`;\r\n                    }\r\n                    html    += `</select><br>`;\r\n                }else{\r\n                    if(entity.state == 'on'){\r\n                        action  = 'turn_off';\r\n                    }else{\r\n                        action  = 'turn_on';\r\n                    }\r\n                    html    = `<button data-domain='${domain}' data-action='${action}' data-id='${entity.entity_id}'>${entity.attributes.friendly_name}</button>`;\r\n                }\r\n\r\n                wrapper.querySelector(`#${domain}`).insertAdjacentHTML('beforeEnd', html);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Hide empty ones\r\n    for (let i = 0; i < types.length; i++) {\r\n        if(document.querySelector(`#${types[i]}`).innerHTML == ''){\r\n            document.querySelector(`#show_${types[i]}`).classList.add('hidden');\r\n        }\r\n    }\r\n}\r\n\r\nwindow.setupEntitiesSubscription = async () => {\r\n    if (unsubEntities) {\r\n        unsubEntities();\r\n        console.log(\"Sleeping\");\r\n        await new Promise((resolve) => setTimeout(resolve, 4000));\r\n    }\r\n\r\n    unsubEntities = subscribeEntities(\r\n        window.connection, \r\n        (entities) => renderEntities(window.connection, entities),\r\n        entIds\r\n    );\r\n};\r\n\r\n// Update the time every minute\r\nsetDateTime();\r\nsetInterval(setDateTime, 60000);\r\n\r\nif(typeof(HA_INSTANCE) != 'undefined'){\r\n    console.log('Logging in with long live access token');\r\n\r\n    await (async () => {\r\n        const auth = createLongLivedTokenAuth(\r\n            HA_INSTANCE,\r\n            HA_SECRET,\r\n        );\r\n\r\n        window.connection = await createConnection({ auth });\r\n    })();\r\n}else{\r\n    await authenticate();\r\n}\r\n\r\nconsole.log('Adding buttons');\r\naddButtons();\r\n\r\nsetupEntitiesSubscription();\r\n\r\nwindow.scrollTo(0, 0);","import {\r\n    callService\r\n} from \"home-assistant-js-websocket\";\r\n\r\nvar progressTimer;\r\n\r\n// function to show the screen\r\nexport function showMediaPlayer(entity){\r\n    console.log(entity)\r\n\r\n    let mediaplayer = document.querySelector('#mediaplayer');\r\n    mediaplayer.classList.remove('hidden');\r\n\r\n    // Store the device we are playing on\r\n    mediaplayer.dataset.player_id   = entity.entity_id;\r\n\r\n    console.log('Showing Media player');\r\n\r\n    // Hide main container\r\n    document.querySelector('.container').classList.add('hidden');\r\n\r\n    // Background image\r\n    if(entity.attributes.entity_picture != undefined){\r\n        mediaplayer.style.backgroundImage               = `url(\"${entity.attributes.entity_picture}\")`; //https://i.scdn.co/image/ab67616d0000b273c1fe6f334de756c96d708d95\r\n    }else if(entity.attributes.app_name == 'Spotify'){\r\n        mediaplayer.style.backgroundImage               = `url(images/spotify.png)`; \r\n    }else if(entity.attributes.app_name == 'Youtube'){\r\n        mediaplayer.style.backgroundImage               = `url(images/youtube.png)`; \r\n    }\r\n\r\n    // Title\r\n    mediaplayer.querySelector(`.title`).textContent     = entity.attributes.media_title;\r\n\r\n    // Volume\r\n    mediaplayer.querySelector('#volume-slider').value   = entity.attributes.volume_level;\r\n\r\n    // Playback controls\r\n    if(entity.state == 'playing' || entity.state == 'buffering'){\r\n        mediaplayer.querySelector(`#pause`).classList.remove('hidden');\r\n        mediaplayer.querySelector(`#play`).classList.add('hidden');\r\n    }else{\r\n        mediaplayer.querySelector(`#pause`).classList.add('hidden');\r\n        mediaplayer.querySelector(`#play`).classList.remove('hidden');\r\n    }\r\n\r\n    // Seek control\r\n\r\n    // We do not get a progress update every time, so do it manualy until the next update\r\n    if(progressTimer != ''){\r\n        clearInterval(progressTimer);\r\n    }\r\n\r\n    mediaplayer.querySelector(`#progress`).max          = entity.attributes.media_duration;\r\n    mediaplayer.querySelector(`#progress`).value        = entity.attributes.media_position;\r\n\r\n    if(entity.state == 'playing'){\r\n        progressTimer   = setInterval((ev) => mediaplayer.querySelector(`#progress`).value = parseFloat(mediaplayer.querySelector(`#progress`).value) + 0.1, 100);\r\n    }\r\n}\r\n\r\n// Listen to controls\r\ndocument.addEventListener('click', (event) => {\r\n    let target              = event.target;\r\n    let parent              = target.closest('span');\r\n    let mediaControlWrapper = target.closest(`#mediaplayer`);\r\n    if(mediaControlWrapper == null){\r\n        return;\r\n    }\r\n    let domain              = target.dataset.domain;\r\n    if(domain == undefined){\r\n        domain  = \"media_player\";\r\n    }\r\n    \r\n    // The entity id of the device we run the action for\r\n    let playerId    = mediaControlWrapper.dataset.player_id;   \r\n\r\n    let action;\r\n\r\n    let data        = {\r\n        entity_id: playerId\r\n    }\r\n\r\n    if(target.id    == 'volume-slider'){\r\n        action                  = 'volume_set';\r\n\r\n        data['volume_level']    = Math.min(target.value, 0.9); \r\n    }else if(parent != null){\r\n        action  = parent.dataset.action;\r\n    }else{\r\n        action  = target.dataset.action;\r\n    }\r\n\r\n    if(action == 'volume_mute'){\r\n        console.log(parent);\r\n        if(parent.querySelector('img').src.includes('volume-mute.png')){\r\n            console.log(parent);\r\n            data['is_volume_muted'] = true;\r\n            parent.querySelector('img').src = 'images/volume-muted.png'\r\n        }else{\r\n            console.log(parent);\r\n            data['is_volume_muted'] = false;\r\n            parent.querySelector('img').src = 'images/volume-mute.png'\r\n        }\r\n    }else if(action == 'media_seek'){\r\n        data['seek_position']   = target.value;\r\n    }\r\n\r\n    callService(connection, domain, action, data);\r\n});","import { parseQuery } from \"./util.js\";\nimport { ERR_HASS_HOST_REQUIRED, ERR_INVALID_AUTH, ERR_INVALID_AUTH_CALLBACK, ERR_INVALID_HTTPS_TO_HTTP, } from \"./errors.js\";\nexport const genClientId = () => `${location.protocol}//${location.host}/`;\nexport const genExpires = (expires_in) => {\n    return expires_in * 1000 + Date.now();\n};\nfunction genRedirectUrl() {\n    // Get current url but without # part.\n    const { protocol, host, pathname, search } = location;\n    return `${protocol}//${host}${pathname}${search}`;\n}\nfunction genAuthorizeUrl(hassUrl, clientId, redirectUrl, state) {\n    let authorizeUrl = `${hassUrl}/auth/authorize?response_type=code&redirect_uri=${encodeURIComponent(redirectUrl)}`;\n    if (clientId !== null) {\n        authorizeUrl += `&client_id=${encodeURIComponent(clientId)}`;\n    }\n    if (state) {\n        authorizeUrl += `&state=${encodeURIComponent(state)}`;\n    }\n    return authorizeUrl;\n}\nfunction redirectAuthorize(hassUrl, clientId, redirectUrl, state) {\n    // Add either ?auth_callback=1 or &auth_callback=1\n    redirectUrl += (redirectUrl.includes(\"?\") ? \"&\" : \"?\") + \"auth_callback=1\";\n    document.location.href = genAuthorizeUrl(hassUrl, clientId, redirectUrl, state);\n}\nasync function tokenRequest(hassUrl, clientId, data) {\n    // Browsers don't allow fetching tokens from https -> http.\n    // Throw an error because it's a pain to debug this.\n    // Guard against not working in node.\n    const l = typeof location !== \"undefined\" && location;\n    if (l && l.protocol === \"https:\") {\n        // Ensure that the hassUrl is hosted on https.\n        const a = document.createElement(\"a\");\n        a.href = hassUrl;\n        if (a.protocol === \"http:\" && a.hostname !== \"localhost\") {\n            throw ERR_INVALID_HTTPS_TO_HTTP;\n        }\n    }\n    const formData = new FormData();\n    if (clientId !== null) {\n        formData.append(\"client_id\", clientId);\n    }\n    Object.keys(data).forEach((key) => {\n        // @ts-ignore\n        formData.append(key, data[key]);\n    });\n    const resp = await fetch(`${hassUrl}/auth/token`, {\n        method: \"POST\",\n        credentials: \"same-origin\",\n        body: formData,\n    });\n    if (!resp.ok) {\n        throw resp.status === 400 /* auth invalid */ ||\n            resp.status === 403 /* user not active */\n            ? ERR_INVALID_AUTH\n            : new Error(\"Unable to fetch tokens\");\n    }\n    const tokens = await resp.json();\n    tokens.hassUrl = hassUrl;\n    tokens.clientId = clientId;\n    tokens.expires = genExpires(tokens.expires_in);\n    return tokens;\n}\nfunction fetchToken(hassUrl, clientId, code) {\n    return tokenRequest(hassUrl, clientId, {\n        code,\n        grant_type: \"authorization_code\",\n    });\n}\nfunction encodeOAuthState(state) {\n    return btoa(JSON.stringify(state));\n}\nfunction decodeOAuthState(encoded) {\n    return JSON.parse(atob(encoded));\n}\nexport class Auth {\n    constructor(data, saveTokens) {\n        this.data = data;\n        this._saveTokens = saveTokens;\n    }\n    get wsUrl() {\n        // Convert from http:// -> ws://, https:// -> wss://\n        return `ws${this.data.hassUrl.substr(4)}/api/websocket`;\n    }\n    get accessToken() {\n        return this.data.access_token;\n    }\n    get expired() {\n        return Date.now() > this.data.expires;\n    }\n    /**\n     * Refresh the access token.\n     */\n    async refreshAccessToken() {\n        if (!this.data.refresh_token)\n            throw new Error(\"No refresh_token\");\n        const data = await tokenRequest(this.data.hassUrl, this.data.clientId, {\n            grant_type: \"refresh_token\",\n            refresh_token: this.data.refresh_token,\n        });\n        // Access token response does not contain refresh token.\n        data.refresh_token = this.data.refresh_token;\n        this.data = data;\n        if (this._saveTokens)\n            this._saveTokens(data);\n    }\n    /**\n     * Revoke the refresh & access tokens.\n     */\n    async revoke() {\n        if (!this.data.refresh_token)\n            throw new Error(\"No refresh_token to revoke\");\n        const formData = new FormData();\n        formData.append(\"token\", this.data.refresh_token);\n        // There is no error checking, as revoke will always return 200\n        await fetch(`${this.data.hassUrl}/auth/revoke`, {\n            method: \"POST\",\n            credentials: \"same-origin\",\n            body: formData,\n        });\n        if (this._saveTokens) {\n            this._saveTokens(null);\n        }\n    }\n}\nexport function createLongLivedTokenAuth(hassUrl, access_token) {\n    return new Auth({\n        hassUrl,\n        clientId: null,\n        expires: Date.now() + 1e11,\n        refresh_token: \"\",\n        access_token,\n        expires_in: 1e11,\n    });\n}\nexport async function getAuth(options = {}) {\n    let data;\n    let hassUrl = options.hassUrl;\n    // Strip trailing slash.\n    if (hassUrl && hassUrl[hassUrl.length - 1] === \"/\") {\n        hassUrl = hassUrl.substr(0, hassUrl.length - 1);\n    }\n    const clientId = options.clientId !== undefined ? options.clientId : genClientId();\n    const limitHassInstance = options.limitHassInstance === true;\n    // Use auth code if it was passed in\n    if (options.authCode && hassUrl) {\n        data = await fetchToken(hassUrl, clientId, options.authCode);\n        if (options.saveTokens) {\n            options.saveTokens(data);\n        }\n    }\n    // Check if we came back from an authorize redirect\n    if (!data) {\n        const query = parseQuery(location.search.substr(1));\n        // Check if we got redirected here from authorize page\n        if (\"auth_callback\" in query) {\n            // Restore state\n            const state = decodeOAuthState(query.state);\n            if (limitHassInstance &&\n                (state.hassUrl !== hassUrl || state.clientId !== clientId)) {\n                throw ERR_INVALID_AUTH_CALLBACK;\n            }\n            data = await fetchToken(state.hassUrl, state.clientId, query.code);\n            if (options.saveTokens) {\n                options.saveTokens(data);\n            }\n        }\n    }\n    // Check for stored tokens\n    if (!data && options.loadTokens) {\n        data = await options.loadTokens();\n    }\n    if (data) {\n        return new Auth(data, options.saveTokens);\n    }\n    if (hassUrl === undefined) {\n        throw ERR_HASS_HOST_REQUIRED;\n    }\n    // If no tokens found but a hassUrl was passed in, let's go get some tokens!\n    redirectAuthorize(hassUrl, clientId, options.redirectUrl || genRedirectUrl(), encodeOAuthState({\n        hassUrl,\n        clientId,\n    }));\n    // Just don't resolve while we navigate to next page\n    return new Promise(() => { });\n}\n","import * as messages from \"./messages.js\";\nexport const getStates = (connection) => connection.sendMessagePromise(messages.states());\nexport const getServices = (connection) => connection.sendMessagePromise(messages.services());\nexport const getConfig = (connection) => connection.sendMessagePromise(messages.config());\nexport const getUser = (connection) => connection.sendMessagePromise(messages.user());\nexport const callService = (connection, domain, service, serviceData, target, returnResponse) => connection.sendMessagePromise(messages.callService(domain, service, serviceData, target, returnResponse));\n","export const createStore = (state) => {\n    let listeners = [];\n    function unsubscribe(listener) {\n        let out = [];\n        for (let i = 0; i < listeners.length; i++) {\n            if (listeners[i] === listener) {\n                listener = null;\n            }\n            else {\n                out.push(listeners[i]);\n            }\n        }\n        listeners = out;\n    }\n    function setState(update, overwrite) {\n        state = overwrite ? update : Object.assign(Object.assign({}, state), update);\n        let currentListeners = listeners;\n        for (let i = 0; i < currentListeners.length; i++) {\n            currentListeners[i](state);\n        }\n    }\n    /**\n     * An observable state container, returned from {@link createStore}\n     * @name store\n     */\n    return {\n        get state() {\n            return state;\n        },\n        /**\n         * Create a bound copy of the given action function.\n         * The bound returned function invokes action() and persists the result back to the store.\n         * If the return value of `action` is a Promise, the resolved value will be used as state.\n         * @param {Function} action\tAn action of the form `action(state, ...args) -> stateUpdate`\n         * @returns {Function} boundAction()\n         */\n        action(action) {\n            function apply(result) {\n                setState(result, false);\n            }\n            // Note: perf tests verifying this implementation: https://esbench.com/bench/5a295e6299634800a0349500\n            return function () {\n                let args = [state];\n                for (let i = 0; i < arguments.length; i++)\n                    args.push(arguments[i]);\n                // @ts-ignore\n                let ret = action.apply(this, args);\n                if (ret != null) {\n                    return ret instanceof Promise ? ret.then(apply) : apply(ret);\n                }\n            };\n        },\n        /**\n         * Apply a partial state object to the current state, invoking registered listeners.\n         * @param {Object} update\t\t\t\tAn object with properties to be merged into state\n         * @param {Boolean} [overwrite=false]\tIf `true`, update will replace state instead of being merged into it\n         */\n        setState,\n        clearState() {\n            state = undefined;\n        },\n        /**\n         * Register a listener function to be called whenever state is changed. Returns an `unsubscribe()` function.\n         * @param {Function} listener\tA function to call when state changes. Gets passed the new state.\n         * @returns {Function} unsubscribe()\n         */\n        subscribe(listener) {\n            listeners.push(listener);\n            return () => {\n                unsubscribe(listener);\n            };\n        },\n        // /**\n        //  * Remove a previously-registered listener function.\n        //  * @param {Function} listener\tThe callback previously passed to `subscribe()` that should be removed.\n        //  * @function\n        //  */\n        // unsubscribe,\n    };\n};\n","import { createStore } from \"./store.js\";\n// Time to wait to unsubscribe from updates after last subscriber unsubscribes\nconst UNSUB_GRACE_PERIOD = 5000; // 5 seconds\nconst DEBUG = false;\n/**\n *\n * @param conn connection\n * @param key the key to store it on the connection. Must be unique for each collection.\n * @param fetchCollection fetch the current state. If undefined assumes subscribeUpdates receives current state\n * @param subscribeUpdates subscribe to updates on the current state\n * @returns\n */\nexport const getCollection = (conn, key, fetchCollection, subscribeUpdates, options = { unsubGrace: true, entity_ids: [] }) => {\n    // @ts-ignore\n    if (conn[key]) {\n        // @ts-ignore\n        return conn[key];\n    }\n    let active = 0;\n    let unsubProm;\n    let unsubTimer;\n    let store = createStore();\n    const refresh = () => {\n        if (!fetchCollection) {\n            throw new Error(\"Collection does not support refresh\");\n        }\n        return fetchCollection(conn).then((state) => store.setState(state, true));\n    };\n    const refreshSwallow = () => refresh().catch((err) => {\n        // Swallow errors if socket is connecting, closing or closed.\n        // We will automatically call refresh again when we re-establish the connection.\n        if (conn.connected) {\n            throw err;\n        }\n    });\n    const setupUpdateSubscription = () => {\n        if (unsubTimer !== undefined) {\n            if (DEBUG) {\n                console.log(`Prevented unsubscribe for ${key}`);\n            }\n            clearTimeout(unsubTimer);\n            unsubTimer = undefined;\n            return;\n        }\n        if (DEBUG) {\n            console.log(`Subscribing to ${key}`);\n        }\n        if (subscribeUpdates) {\n            unsubProm = subscribeUpdates(conn, store, options.entity_ids);\n        }\n        if (fetchCollection) {\n            // Fetch when connection re-established.\n            conn.addEventListener(\"ready\", refreshSwallow);\n            refreshSwallow();\n        }\n        conn.addEventListener(\"disconnected\", handleDisconnect);\n    };\n    const teardownUpdateSubscription = () => {\n        if (DEBUG) {\n            console.log(`Unsubscribing from ${key}`);\n        }\n        unsubTimer = undefined;\n        // Unsubscribe from changes\n        if (unsubProm)\n            unsubProm.then((unsub) => {\n                unsub();\n            });\n        store.clearState();\n        conn.removeEventListener(\"ready\", refresh);\n        conn.removeEventListener(\"disconnected\", handleDisconnect);\n    };\n    const scheduleTeardownUpdateSubscription = () => {\n        if (DEBUG) {\n            console.log(`Scheduling unsubscribing from ${key}`);\n        }\n        unsubTimer = setTimeout(teardownUpdateSubscription, UNSUB_GRACE_PERIOD);\n    };\n    const handleDisconnect = () => {\n        // If we're going to unsubscribe and then lose connection,\n        // just unsubscribe immediately.\n        if (unsubTimer) {\n            clearTimeout(unsubTimer);\n            teardownUpdateSubscription();\n        }\n    };\n    // @ts-ignore\n    conn[key] = {\n        get state() {\n            return store.state;\n        },\n        refresh,\n        subscribe(subscriber) {\n            active++;\n            if (DEBUG) {\n                console.log(`New subscriber for ${key}. Active subscribers: ${active}`);\n            }\n            // If this was the first subscriber, attach collection\n            if (active === 1) {\n                setupUpdateSubscription();\n            }\n            const unsub = store.subscribe(subscriber);\n            if (store.state !== undefined) {\n                // Don't call it right away so that caller has time\n                // to initialize all the things.\n                setTimeout(() => subscriber(store.state), 0);\n            }\n            return () => {\n                unsub();\n                active--;\n                if (DEBUG) {\n                    console.log(`Unsubscribe for ${key}. Active subscribers: ${active}`);\n                }\n                if (!active) {\n                    options.unsubGrace\n                        ? scheduleTeardownUpdateSubscription()\n                        : teardownUpdateSubscription();\n                }\n            };\n        },\n    };\n    // @ts-ignore\n    return conn[key];\n};\n// Legacy name. It gets a collection and subscribes.\nexport const createCollection = (key, fetchCollection, subscribeUpdates, conn, onChange) => getCollection(conn, key, fetchCollection, subscribeUpdates).subscribe(onChange);\n","import { getCollection } from \"./collection.js\";\nimport { getStates } from \"./commands.js\";\nimport { atLeastHaVersion } from \"./util.js\";\nfunction processEvent(store, updates) {\n    const state = Object.assign({}, store.state);\n    if (updates.a) {\n        for (const entityId in updates.a) {\n            const newState = updates.a[entityId];\n            let last_changed = new Date(newState.lc * 1000).toISOString();\n            state[entityId] = {\n                entity_id: entityId,\n                state: newState.s,\n                attributes: newState.a,\n                context: typeof newState.c === \"string\"\n                    ? { id: newState.c, parent_id: null, user_id: null }\n                    : newState.c,\n                last_changed: last_changed,\n                last_updated: newState.lu\n                    ? new Date(newState.lu * 1000).toISOString()\n                    : last_changed,\n            };\n        }\n    }\n    if (updates.r) {\n        for (const entityId of updates.r) {\n            delete state[entityId];\n        }\n    }\n    if (updates.c) {\n        for (const entityId in updates.c) {\n            let entityState = state[entityId];\n            if (!entityState) {\n                console.warn(\"Received state update for unknown entity\", entityId);\n                continue;\n            }\n            entityState = Object.assign({}, entityState);\n            const { \"+\": toAdd, \"-\": toRemove } = updates.c[entityId];\n            const attributesChanged = (toAdd === null || toAdd === void 0 ? void 0 : toAdd.a) || (toRemove === null || toRemove === void 0 ? void 0 : toRemove.a);\n            const attributes = attributesChanged\n                ? Object.assign({}, entityState.attributes) : entityState.attributes;\n            if (toAdd) {\n                if (toAdd.s !== undefined) {\n                    entityState.state = toAdd.s;\n                }\n                if (toAdd.c) {\n                    if (typeof toAdd.c === \"string\") {\n                        entityState.context = Object.assign(Object.assign({}, entityState.context), { id: toAdd.c });\n                    }\n                    else {\n                        entityState.context = Object.assign(Object.assign({}, entityState.context), toAdd.c);\n                    }\n                }\n                if (toAdd.lc) {\n                    entityState.last_updated = entityState.last_changed = new Date(toAdd.lc * 1000).toISOString();\n                }\n                else if (toAdd.lu) {\n                    entityState.last_updated = new Date(toAdd.lu * 1000).toISOString();\n                }\n                if (toAdd.a) {\n                    Object.assign(attributes, toAdd.a);\n                }\n            }\n            if (toRemove === null || toRemove === void 0 ? void 0 : toRemove.a) {\n                for (const key of toRemove.a) {\n                    delete attributes[key];\n                }\n            }\n            if (attributesChanged) {\n                entityState.attributes = attributes;\n            }\n            state[entityId] = entityState;\n        }\n    }\n    store.setState(state, true);\n}\nconst subscribeUpdates = (conn, store, entity_ids=[]) => {\n    conn.subscribeMessage((ev) => processEvent(store, ev), {\n        type: \"subscribe_entities\",\n        entity_ids: entity_ids,\n    });\n}\nfunction legacyProcessEvent(store, event) {\n    const state = store.state;\n    if (state === undefined)\n        return;\n    const { entity_id, new_state } = event.data;\n    if (new_state) {\n        store.setState({ [new_state.entity_id]: new_state });\n    }\n    else {\n        const newEntities = Object.assign({}, state);\n        delete newEntities[entity_id];\n        store.setState(newEntities, true);\n    }\n}\nasync function legacyFetchEntities(conn) {\n    const states = await getStates(conn);\n    const entities = {};\n    for (let i = 0; i < states.length; i++) {\n        const state = states[i];\n        entities[state.entity_id] = state;\n    }\n    return entities;\n}\nconst legacySubscribeUpdates = (conn, store) => conn.subscribeEvents((ev) => legacyProcessEvent(store, ev), \"state_changed\");\nexport const entitiesColl = (conn, entity_ids=[]) => atLeastHaVersion(conn.haVersion, 2022, 4, 0)\n    ? getCollection(conn, \"_ent\", undefined, subscribeUpdates, {unsubGrace: true, entity_ids: entity_ids})\n    : getCollection(conn, \"_ent\", legacyFetchEntities, legacySubscribeUpdates);\nexport const subscribeEntities = (conn, onChange, entity_ids=[]) => entitiesColl(conn, entity_ids).subscribe(onChange)\n","export const ERR_CANNOT_CONNECT = 1;\nexport const ERR_INVALID_AUTH = 2;\nexport const ERR_CONNECTION_LOST = 3;\nexport const ERR_HASS_HOST_REQUIRED = 4;\nexport const ERR_INVALID_HTTPS_TO_HTTP = 5;\nexport const ERR_INVALID_AUTH_CALLBACK = 6;\n","/**\n * Create a web socket connection with a Home Assistant instance.\n */\nimport { ERR_INVALID_AUTH, ERR_CANNOT_CONNECT, ERR_HASS_HOST_REQUIRED, } from \"./errors.js\";\nimport * as messages from \"./messages.js\";\nimport { atLeastHaVersion } from \"./util.js\";\nconst DEBUG = false;\nexport const MSG_TYPE_AUTH_REQUIRED = \"auth_required\";\nexport const MSG_TYPE_AUTH_INVALID = \"auth_invalid\";\nexport const MSG_TYPE_AUTH_OK = \"auth_ok\";\nexport function createSocket(options) {\n    if (!options.auth) {\n        throw ERR_HASS_HOST_REQUIRED;\n    }\n    const auth = options.auth;\n    // Start refreshing expired tokens even before the WS connection is open.\n    // We know that we will need auth anyway.\n    let authRefreshTask = auth.expired\n        ? auth.refreshAccessToken().then(() => {\n            authRefreshTask = undefined;\n        }, () => {\n            authRefreshTask = undefined;\n        })\n        : undefined;\n    // Convert from http:// -> ws://, https:// -> wss://\n    const url = auth.wsUrl;\n    if (DEBUG) {\n        console.log(\"[Auth phase] Initializing\", url);\n    }\n    function connect(triesLeft, promResolve, promReject) {\n        if (DEBUG) {\n            console.log(\"[Auth Phase] New connection\", url);\n        }\n        const socket = new WebSocket(url);\n        // If invalid auth, we will not try to reconnect.\n        let invalidAuth = false;\n        const closeMessage = () => {\n            // If we are in error handler make sure close handler doesn't also fire.\n            socket.removeEventListener(\"close\", closeMessage);\n            if (invalidAuth) {\n                promReject(ERR_INVALID_AUTH);\n                return;\n            }\n            // Reject if we no longer have to retry\n            if (triesLeft === 0) {\n                // We never were connected and will not retry\n                promReject(ERR_CANNOT_CONNECT);\n                return;\n            }\n            const newTries = triesLeft === -1 ? -1 : triesLeft - 1;\n            // Try again in a second\n            setTimeout(() => connect(newTries, promResolve, promReject), 1000);\n        };\n        // Auth is mandatory, so we can send the auth message right away.\n        const handleOpen = async (event) => {\n            try {\n                if (auth.expired) {\n                    await (authRefreshTask ? authRefreshTask : auth.refreshAccessToken());\n                }\n                socket.send(JSON.stringify(messages.auth(auth.accessToken)));\n            }\n            catch (err) {\n                // Refresh token failed\n                invalidAuth = err === ERR_INVALID_AUTH;\n                socket.close();\n            }\n        };\n        const handleMessage = async (event) => {\n            const message = JSON.parse(event.data);\n            if (DEBUG) {\n                console.log(\"[Auth phase] Received\", message);\n            }\n            switch (message.type) {\n                case MSG_TYPE_AUTH_INVALID:\n                    invalidAuth = true;\n                    socket.close();\n                    break;\n                case MSG_TYPE_AUTH_OK:\n                    socket.removeEventListener(\"open\", handleOpen);\n                    socket.removeEventListener(\"message\", handleMessage);\n                    socket.removeEventListener(\"close\", closeMessage);\n                    socket.removeEventListener(\"error\", closeMessage);\n                    socket.haVersion = message.ha_version;\n                    if (atLeastHaVersion(socket.haVersion, 2022, 9)) {\n                        socket.send(JSON.stringify(messages.supportedFeatures()));\n                    }\n                    promResolve(socket);\n                    break;\n                default:\n                    if (DEBUG) {\n                        // We already send response to this message when socket opens\n                        if (message.type !== MSG_TYPE_AUTH_REQUIRED) {\n                            console.warn(\"[Auth phase] Unhandled message\", message);\n                        }\n                    }\n            }\n        };\n        socket.addEventListener(\"open\", handleOpen);\n        socket.addEventListener(\"message\", handleMessage);\n        socket.addEventListener(\"close\", closeMessage);\n        socket.addEventListener(\"error\", closeMessage);\n    }\n    return new Promise((resolve, reject) => connect(options.setupRetry, resolve, reject));\n}\n","/**\n * Connection that wraps a socket and provides an interface to interact with\n * the Home Assistant websocket API.\n */\nimport * as messages from \"./messages.js\";\nimport { ERR_INVALID_AUTH, ERR_CONNECTION_LOST } from \"./errors.js\";\nconst DEBUG = false;\nexport class Connection {\n    constructor(socket, options) {\n        this._handleMessage = (event) => {\n            let messageGroup = JSON.parse(event.data);\n            if (!Array.isArray(messageGroup)) {\n                messageGroup = [messageGroup];\n            }\n            messageGroup.forEach((message) => {\n                if (DEBUG) {\n                    console.log(\"Received\", message);\n                }\n                const info = this.commands.get(message.id);\n                switch (message.type) {\n                    case \"event\":\n                        if (info) {\n                            info.callback(message.event);\n                        }\n                        else {\n                            console.warn(`Received event for unknown subscription ${message.id}. Unsubscribing.`);\n                            this.sendMessagePromise(messages.unsubscribeEvents(message.id)).catch((err) => {\n                                if (DEBUG) {\n                                    console.warn(` Error unsubsribing from unknown subscription ${message.id}`, err);\n                                }\n                            });\n                        }\n                        break;\n                    case \"result\":\n                        // No info is fine. If just sendMessage is used, we did not store promise for result\n                        if (info) {\n                            if (message.success) {\n                                info.resolve(message.result);\n                                // Don't remove subscriptions.\n                                if (!(\"subscribe\" in info)) {\n                                    this.commands.delete(message.id);\n                                }\n                            }\n                            else {\n                                info.reject(message.error);\n                                this.commands.delete(message.id);\n                            }\n                        }\n                        break;\n                    case \"pong\":\n                        if (info) {\n                            info.resolve();\n                            this.commands.delete(message.id);\n                        }\n                        else {\n                            console.warn(`Received unknown pong response ${message.id}`);\n                        }\n                        break;\n                    default:\n                        if (DEBUG) {\n                            console.warn(\"Unhandled message\", message);\n                        }\n                }\n            });\n        };\n        this._handleClose = async () => {\n            const oldCommands = this.commands;\n            // reset to original state except haVersion\n            this.commandId = 1;\n            this.oldSubscriptions = this.commands;\n            this.commands = new Map();\n            this.socket = undefined;\n            // Reject in-flight sendMessagePromise requests\n            oldCommands.forEach((info) => {\n                // We don't cancel subscribeEvents commands in flight\n                // as we will be able to recover them.\n                if (!(\"subscribe\" in info)) {\n                    info.reject(messages.error(ERR_CONNECTION_LOST, \"Connection lost\"));\n                }\n            });\n            if (this.closeRequested) {\n                return;\n            }\n            this.fireEvent(\"disconnected\");\n            // Disable setupRetry, we control it here with auto-backoff\n            const options = Object.assign(Object.assign({}, this.options), { setupRetry: 0 });\n            const reconnect = (tries) => {\n                setTimeout(async () => {\n                    if (this.closeRequested) {\n                        return;\n                    }\n                    if (DEBUG) {\n                        console.log(\"Trying to reconnect\");\n                    }\n                    try {\n                        const socket = await options.createSocket(options);\n                        this._setSocket(socket);\n                    }\n                    catch (err) {\n                        if (this._queuedMessages) {\n                            const queuedMessages = this._queuedMessages;\n                            this._queuedMessages = undefined;\n                            for (const msg of queuedMessages) {\n                                if (msg.reject) {\n                                    msg.reject(ERR_CONNECTION_LOST);\n                                }\n                            }\n                        }\n                        if (err === ERR_INVALID_AUTH) {\n                            this.fireEvent(\"reconnect-error\", err);\n                        }\n                        else {\n                            reconnect(tries + 1);\n                        }\n                    }\n                }, Math.min(tries, 5) * 1000);\n            };\n            if (this.suspendReconnectPromise) {\n                await this.suspendReconnectPromise;\n                this.suspendReconnectPromise = undefined;\n                // For the first retry after suspend, we will queue up\n                // all messages.\n                this._queuedMessages = [];\n            }\n            reconnect(0);\n        };\n        // connection options\n        //  - setupRetry: amount of ms to retry when unable to connect on initial setup\n        //  - createSocket: create a new Socket connection\n        this.options = options;\n        // id if next command to send\n        this.commandId = 2; // socket may send 1 at the start to enable features\n        // info about active subscriptions and commands in flight\n        this.commands = new Map();\n        // map of event listeners\n        this.eventListeners = new Map();\n        // true if a close is requested by the user\n        this.closeRequested = false;\n        this._setSocket(socket);\n    }\n    get connected() {\n        // Using conn.socket.OPEN instead of WebSocket for better node support\n        return (this.socket !== undefined && this.socket.readyState == this.socket.OPEN);\n    }\n    _setSocket(socket) {\n        this.socket = socket;\n        this.haVersion = socket.haVersion;\n        socket.addEventListener(\"message\", this._handleMessage);\n        socket.addEventListener(\"close\", this._handleClose);\n        const oldSubscriptions = this.oldSubscriptions;\n        if (oldSubscriptions) {\n            this.oldSubscriptions = undefined;\n            oldSubscriptions.forEach((info) => {\n                if (\"subscribe\" in info && info.subscribe) {\n                    info.subscribe().then((unsub) => {\n                        info.unsubscribe = unsub;\n                        // We need to resolve this in case it wasn't resolved yet.\n                        // This allows us to subscribe while we're disconnected\n                        // and recover properly.\n                        info.resolve();\n                    });\n                }\n            });\n        }\n        const queuedMessages = this._queuedMessages;\n        if (queuedMessages) {\n            this._queuedMessages = undefined;\n            for (const queuedMsg of queuedMessages) {\n                queuedMsg.resolve();\n            }\n        }\n        this.fireEvent(\"ready\");\n    }\n    addEventListener(eventType, callback) {\n        let listeners = this.eventListeners.get(eventType);\n        if (!listeners) {\n            listeners = [];\n            this.eventListeners.set(eventType, listeners);\n        }\n        listeners.push(callback);\n    }\n    removeEventListener(eventType, callback) {\n        const listeners = this.eventListeners.get(eventType);\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(callback);\n        if (index !== -1) {\n            listeners.splice(index, 1);\n        }\n    }\n    fireEvent(eventType, eventData) {\n        (this.eventListeners.get(eventType) || []).forEach((callback) => callback(this, eventData));\n    }\n    suspendReconnectUntil(suspendPromise) {\n        this.suspendReconnectPromise = suspendPromise;\n    }\n    suspend() {\n        if (!this.suspendReconnectPromise) {\n            throw new Error(\"Suspend promise not set\");\n        }\n        if (this.socket) {\n            this.socket.close();\n        }\n    }\n    /**\n     * Reconnect the websocket connection.\n     * @param force discard old socket instead of gracefully closing it.\n     */\n    reconnect(force = false) {\n        if (!this.socket) {\n            return;\n        }\n        if (!force) {\n            this.socket.close();\n            return;\n        }\n        this.socket.removeEventListener(\"message\", this._handleMessage);\n        this.socket.removeEventListener(\"close\", this._handleClose);\n        this.socket.close();\n        this._handleClose();\n    }\n    close() {\n        this.closeRequested = true;\n        if (this.socket) {\n            this.socket.close();\n        }\n    }\n    /**\n     * Subscribe to a specific or all events.\n     *\n     * @param callback Callback  to be called when a new event fires\n     * @param eventType\n     * @returns promise that resolves to an unsubscribe function\n     */\n    async subscribeEvents(callback, eventType) {\n        return this.subscribeMessage(callback, messages.subscribeEvents(eventType));\n    }\n    ping() {\n        return this.sendMessagePromise(messages.ping());\n    }\n    sendMessage(message, commandId) {\n        if (!this.connected) {\n            throw ERR_CONNECTION_LOST;\n        }\n        if (DEBUG) {\n            console.log(\"Sending\", message);\n        }\n        if (this._queuedMessages) {\n            if (commandId) {\n                throw new Error(\"Cannot queue with commandId\");\n            }\n            this._queuedMessages.push({ resolve: () => this.sendMessage(message) });\n            return;\n        }\n        if (!commandId) {\n            commandId = this._genCmdId();\n        }\n        message.id = commandId;\n        this.socket.send(JSON.stringify(message));\n    }\n    sendMessagePromise(message) {\n        return new Promise((resolve, reject) => {\n            if (this._queuedMessages) {\n                this._queuedMessages.push({\n                    reject,\n                    resolve: async () => {\n                        try {\n                            resolve(await this.sendMessagePromise(message));\n                        }\n                        catch (err) {\n                            reject(err);\n                        }\n                    },\n                });\n                return;\n            }\n            const commandId = this._genCmdId();\n            this.commands.set(commandId, { resolve, reject });\n            this.sendMessage(message, commandId);\n        });\n    }\n    /**\n     * Call a websocket command that starts a subscription on the backend.\n     *\n     * @param message the message to start the subscription\n     * @param callback the callback to be called when a new item arrives\n     * @param [options.resubscribe] re-established a subscription after a reconnect. Defaults to true.\n     * @returns promise that resolves to an unsubscribe function\n     */\n    async subscribeMessage(callback, subscribeMessage, options) {\n        if (this._queuedMessages) {\n            await new Promise((resolve, reject) => {\n                this._queuedMessages.push({ resolve, reject });\n            });\n        }\n        let info;\n        await new Promise((resolve, reject) => {\n            // Command ID that will be used\n            const commandId = this._genCmdId();\n            // We store unsubscribe on info object. That way we can overwrite it in case\n            // we get disconnected and we have to subscribe again.\n            info = {\n                resolve,\n                reject,\n                callback,\n                subscribe: (options === null || options === void 0 ? void 0 : options.resubscribe) !== false\n                    ? () => this.subscribeMessage(callback, subscribeMessage)\n                    : undefined,\n                unsubscribe: async () => {\n                    // No need to unsubscribe if we're disconnected\n                    if (this.connected) {\n                        await this.sendMessagePromise(messages.unsubscribeEvents(commandId));\n                    }\n                    this.commands.delete(commandId);\n                },\n            };\n            this.commands.set(commandId, info);\n            try {\n                this.sendMessage(subscribeMessage, commandId);\n            }\n            catch (err) {\n                // Happens when the websocket is already closing.\n                // Don't have to handle the error, reconnect logic will pick it up.\n            }\n        });\n        return () => info.unsubscribe();\n    }\n    _genCmdId() {\n        return ++this.commandId;\n    }\n}\n","// JS extensions in imports allow tsc output to be consumed by browsers.\nimport { createSocket } from \"./socket.js\";\nimport { Connection } from \"./connection.js\";\nexport * from \"./auth.js\";\nexport * from \"./collection.js\";\nexport * from \"./connection.js\";\nexport * from \"./config.js\";\nexport * from \"./services.js\";\nexport * from \"./entities.js\";\nexport * from \"./errors.js\";\nexport * from \"./socket.js\";\nexport * from \"./types.js\";\nexport * from \"./commands.js\";\nexport async function createConnection(options) {\n    const connOptions = Object.assign({ setupRetry: 0, createSocket }, options);\n    const socket = await connOptions.createSocket(connOptions);\n    const conn = new Connection(socket, connOptions);\n    return conn;\n}\n","export function auth(accessToken) {\n    return {\n        type: \"auth\",\n        access_token: accessToken,\n    };\n}\nexport function supportedFeatures() {\n    return {\n        type: \"supported_features\",\n        id: 1, // Always the first message after auth\n        features: { coalesce_messages: 1 },\n    };\n}\nexport function states() {\n    return {\n        type: \"get_states\",\n    };\n}\nexport function config() {\n    return {\n        type: \"get_config\",\n    };\n}\nexport function services() {\n    return {\n        type: \"get_services\",\n    };\n}\nexport function user() {\n    return {\n        type: \"auth/current_user\",\n    };\n}\nexport function callService(domain, service, serviceData, target, returnResponse) {\n    const message = {\n        type: \"call_service\",\n        domain,\n        service,\n        target,\n        return_response: returnResponse,\n    };\n    if (serviceData) {\n        message.service_data = serviceData;\n    }\n    return message;\n}\nexport function subscribeEvents(eventType) {\n    const message = {\n        type: \"subscribe_events\",\n    };\n    if (eventType) {\n        message.event_type = eventType;\n    }\n    return message;\n}\nexport function unsubscribeEvents(subscription) {\n    return {\n        type: \"unsubscribe_events\",\n        subscription,\n    };\n}\nexport function ping() {\n    return {\n        type: \"ping\",\n    };\n}\nexport function error(code, message) {\n    return {\n        type: \"result\",\n        success: false,\n        error: {\n            code,\n            message,\n        },\n    };\n}\n","export function parseQuery(queryString) {\n    const query = {};\n    const items = queryString.split(\"&\");\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i].split(\"=\");\n        const key = decodeURIComponent(item[0]);\n        const value = item.length > 1 ? decodeURIComponent(item[1]) : undefined;\n        query[key] = value;\n    }\n    return query;\n}\n// From: https://davidwalsh.name/javascript-debounce-function\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n// eslint-disable-next-line: ban-types\nexport const debounce = (func, wait, immediate = false) => {\n    let timeout;\n    // @ts-ignore\n    return function (...args) {\n        // @ts-ignore\n        const context = this;\n        const later = () => {\n            timeout = undefined;\n            if (!immediate) {\n                func.apply(context, args);\n            }\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) {\n            func.apply(context, args);\n        }\n    };\n};\nexport const atLeastHaVersion = (version, major, minor, patch) => {\n    const [haMajor, haMinor, haPatch] = version.split(\".\", 3);\n    return (Number(haMajor) > major ||\n        (Number(haMajor) === major &&\n            (patch === undefined\n                ? Number(haMinor) >= minor\n                : Number(haMinor) > minor)) ||\n        (patch !== undefined &&\n            Number(haMajor) === major &&\n            Number(haMinor) === minor &&\n            Number(haPatch) >= patch));\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(564);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","closeModal","document","getElementById","classList","add","addEventListener","timeout","lastTap","event","currentTime","Date","getTime","tapLength","preventDefault","doubleTap","CustomEvent","bubbles","detail","target","dispatchEvent","setTimeout","clearTimeout","detectDoubleTap","remove","async","ev","domain","dataset","action","id","undefined","closest","matches","curActive","querySelector","window","connection","entity_id","Promise","resolve","selectedOption","options","selectedIndex","console","log","unsubEntities","entIds","authenticate","auth","authOptions","loadTokens","JSON","parse","localStorage","hassTokens","err","saveTokens","tokens","stringify","alert","hassUrl","prompt","location","search","includes","history","replaceState","pathname","then","user","setMaxMinContent","selector","entity","querySelectorAll","forEach","el","textContent","state","time","last_changed","h","getHours","m","getMinutes","addLeadingZeros","replace","processEntity","entities","entId","checkTimedOut","updateRain","renderEntities","firstRun","playing","Object","values","setDateTime","today","dateString","getDate","getMonth","getFullYear","innerHTML","i","date","timedOut","now","rain","rainRate","val","style","display","addButtons","html","entitytlist","wrapper","types","key","entries","split","attributes","friendly_name","length","insertAdjacentHTML","setupEntitiesSubscription","setInterval","HA_INSTANCE","HA_SECRET","scrollTo","progressTimer","showMediaPlayer","mediaplayer","player_id","entity_picture","backgroundImage","app_name","media_title","value","volume_level","clearInterval","max","media_duration","media_position","parseFloat","parent","mediaControlWrapper","data","Math","min","src","genClientId","protocol","host","genExpires","expires_in","tokenRequest","clientId","l","a","createElement","href","hostname","formData","FormData","append","keys","resp","fetch","method","credentials","body","ok","status","Error","json","expires","fetchToken","code","grant_type","Auth","constructor","this","_saveTokens","wsUrl","substr","accessToken","access_token","expired","refreshAccessToken","refresh_token","revoke","createLongLivedTokenAuth","getAuth","limitHassInstance","authCode","query","encoded","atob","redirectUrl","authorizeUrl","encodeURIComponent","genAuthorizeUrl","redirectAuthorize","genRedirectUrl","btoa","getStates","sendMessagePromise","getUser","callService","service","serviceData","returnResponse","createStore","listeners","setState","update","overwrite","assign","currentListeners","apply","result","args","arguments","push","ret","clearState","subscribe","listener","out","unsubscribe","getCollection","conn","fetchCollection","subscribeUpdates","unsubGrace","entity_ids","unsubProm","unsubTimer","active","store","refresh","refreshSwallow","catch","connected","teardownUpdateSubscription","unsub","removeEventListener","handleDisconnect","subscriber","setupUpdateSubscription","subscribeMessage","updates","entityId","newState","lc","toISOString","s","context","c","parent_id","user_id","last_updated","lu","r","entityState","warn","toAdd","toRemove","attributesChanged","processEvent","type","legacyFetchEntities","states","legacySubscribeUpdates","subscribeEvents","new_state","newEntities","legacyProcessEvent","subscribeEntities","onChange","haVersion","entitiesColl","ERR_CANNOT_CONNECT","ERR_INVALID_AUTH","ERR_CONNECTION_LOST","ERR_HASS_HOST_REQUIRED","ERR_INVALID_HTTPS_TO_HTTP","ERR_INVALID_AUTH_CALLBACK","DEBUG","MSG_TYPE_AUTH_REQUIRED","MSG_TYPE_AUTH_INVALID","MSG_TYPE_AUTH_OK","createSocket","authRefreshTask","url","connect","triesLeft","promResolve","promReject","socket","WebSocket","invalidAuth","closeMessage","newTries","handleOpen","send","messages","close","handleMessage","message","ha_version","reject","setupRetry","Connection","_handleMessage","messageGroup","Array","isArray","info","commands","get","callback","success","delete","error","_handleClose","oldCommands","commandId","oldSubscriptions","Map","closeRequested","fireEvent","reconnect","tries","_setSocket","_queuedMessages","queuedMessages","msg","suspendReconnectPromise","eventListeners","readyState","OPEN","queuedMsg","eventType","set","index","indexOf","splice","eventData","suspendReconnectUntil","suspendPromise","suspend","force","ping","sendMessage","_genCmdId","resubscribe","createConnection","connOptions","supportedFeatures","features","coalesce_messages","return_response","service_data","event_type","unsubscribeEvents","subscription","parseQuery","queryString","items","item","decodeURIComponent","atLeastHaVersion","version","major","minor","patch","haMajor","haMinor","haPatch","Number","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","Symbol","queue","d","fn","hasAwait","currentDeps","outerResolve","depQueues","Set","promise","rej","x","deps","map","dep","obj","e","wrapDeps","getResult","fnQueue","q","has","definition","o","defineProperty","enumerable","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}