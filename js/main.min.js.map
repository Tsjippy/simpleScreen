{"version":3,"file":"main.min.js","mappings":"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","sources":["webpack://main/webpack/runtime/async module","webpack://main/./main.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/auth.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/commands.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/store.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/collection.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/entities.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/errors.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/socket.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/connection.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/index.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/messages.js","webpack://main/./node_modules/home-assistant-js-websocket/dist/util.js","webpack://main/webpack/bootstrap","webpack://main/webpack/runtime/define property getters","webpack://main/webpack/runtime/hasOwnProperty shorthand","webpack://main/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","import {\r\n    Auth,\r\n    createLongLivedTokenAuth,\r\n    getAuth,\r\n    getUser,\r\n    callService,\r\n    createConnection,\r\n    subscribeEntities,\r\n    ERR_HASS_HOST_REQUIRED\r\n} from \"home-assistant-js-websocket\";\r\n\r\nimport './secrets.js';\r\n\r\nlet unsubEntities;\r\nvar connection          = '';\r\nvar counter             = 0;\r\n \r\n// Only check the ones we are interested in \r\nvar entIds          = [\r\n    'sensor.pws_temperature',\r\n    'sensor.pws_temperature_indoor',\r\n    'sensor.pws_humidity_indoor',\r\n    'sensor.pws_humidity',\r\n    'sensor.maximum_temperature_outside',\r\n    'sensor.minimum_temperature_outside',\r\n    'sensor.maximum_temperature_inside',\r\n    'sensor.minimum_temperature_inside',\r\n    'sensor.pws_rain',\r\n    'sensor.pws_rainrate',\r\n    'media_player.allemaal',\r\n    'media_player.keuken',\r\n    'media_player.woonkamer'\r\n];\r\n\r\nasync function authenticate(){\r\n    let auth;\r\n    const storeAuth     = true;\r\n    const authOptions   = storeAuth\r\n    ? {\r\n        async loadTokens() {\r\n            try {\r\n                return JSON.parse(localStorage.hassTokens);\r\n            } catch (err) {\r\n                return undefined;\r\n            }\r\n        },\r\n        saveTokens: (tokens) => {\r\n            localStorage.hassTokens = JSON.stringify(tokens);\r\n        },\r\n    }\r\n    : {};\r\n\r\n    try {\r\n        auth            = await getAuth(authOptions);\r\n    } catch (err) {\r\n        if (err === ERR_HASS_HOST_REQUIRED) {\r\n            authOptions.hassUrl = prompt(\r\n                \"What host to connect to?\",\r\n                \"http://localhost:8123\",\r\n            );\r\n\r\n            if (!authOptions.hassUrl) return;\r\n\r\n            auth            = await getAuth(authOptions);\r\n        } else {\r\n            alert(`Unknown error: ${err}`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    connection = await createConnection({ auth });\r\n    \r\n    for (const ev of [\"disconnected\", \"ready\", \"reconnect-error\"]) {\r\n        connection.addEventListener(ev, () => console.log(`Event: ${ev}`));\r\n    }\r\n\r\n    // Clear url if we have been able to establish a connection\r\n    if (location.search.includes(\"auth_callback=1\")) {\r\n        history.replaceState(null, \"\", location.pathname);\r\n    }\r\n\r\n    // To play from the console\r\n    window.auth         = auth;\r\n    window.connection   = connection;\r\n\r\n    getUser(connection).then((user) => {\r\n        console.log(\"Logged in as\", user);\r\n        window.user = user;\r\n    });\r\n}\r\n\r\nfunction setMaxMinContent(selector, entity){\r\n    document.querySelectorAll(selector).forEach(el => el.textContent   =   entity.state + '°');\r\n\r\n    let time        = new Date(entity.last_changed);\r\n    let h           = time.getHours();\r\n    let m           = time.getMinutes();\r\n    m               = addLeadingZeros(m);\r\n    document.querySelectorAll(selector.replace('-temp', '-time')).forEach(el => el.textContent   =   `${h}:${m}`);  \r\n}\r\n\r\nfunction processEntity(entity, entities){\r\n    let entId   = entity.entity_id;\r\n\r\n    // Temperatures\r\n    if( entId == 'sensor.pws_temperature'){\r\n        document.querySelector(`#outside .tempwrapper .temp`).textContent = entity.state;\r\n\r\n        checkTimedOut(entity, `#outside .tempwrapper .temp`);\r\n    }else if( entId == 'sensor.pws_temperature_indoor'){\r\n        document.querySelector(`#inside .tempwrapper .temp`).textContent = entity.state;\r\n\r\n        checkTimedOut(entity, `#inside .tempwrapper .temp`);\r\n    }\r\n\r\n    // Humidity\r\n    else if( entId == 'sensor.pws_humidity'){\r\n        document.querySelector(`#outside .humwrapper .hum`).textContent = entity.state;\r\n    }else if( entId == 'sensor.pws_humidity_indoor'){\r\n        document.querySelector(`#inside .humwrapper .hum`).textContent = entity.state;\r\n    }\r\n    \r\n    // Max Temps\r\n    else if( entId == 'sensor.maximum_temperature_outside'){\r\n        setMaxMinContent('#outside .max .max-temp', entity);\r\n    }else if( entId == 'sensor.maximum_temperature_inside'){\r\n        setMaxMinContent('#inside .max .max-temp', entity); \r\n    }\r\n    \r\n    // Min temps\r\n    else if( entId == 'sensor.minimum_temperature_outside'){\r\n        setMaxMinContent('#outside .min .min-temp', entity);\r\n    }else if( entId == 'sensor.minimum_temperature_inside'){\r\n        setMaxMinContent('#inside .min .min-temp', entity); \r\n    }\r\n    \r\n    // Rain\r\n    else if( entId == 'sensor.pws_rain'){\r\n        updateRain(entity.state, entities['sensor.pws_rainrate']);\r\n    }else if( entId == 'sensor.pws_rainrate'){\r\n        updateRain(entities['sensor.pws_rain'], entity.state);\r\n    }\r\n\r\n    // Only change the url if needed, otherwise it will reload\r\n    else if( entId.includes( 'media_player' ) && document.querySelector('.mediaplayer iframe') == null){\r\n        // we are playing or buffering and not playing before\r\n        if((entity.state == 'playing' || entity.state == 'buffering')){\r\n            console.log('Showing Media player');\r\n\r\n            // hide main container\r\n            document.querySelector('.container').style.display      = 'none';  \r\n\r\n            let iframe      = document.createElement('iframe');\r\n            iframe.name     = 'ha-main-window';\r\n            iframe.onload   = hideTopBar;\r\n\r\n            // Set the iframe url\r\n            let url = 'http://192.168.0.200:8123/';\r\n            if (entId == 'media_player.allemaal'){\r\n                url   += 'dashboard-chromecast/0';\r\n            }else if(entId == 'media_player.keuken'){\r\n                url   += 'chromecast-keuken/0';\r\n            }else if(entId == 'media_player.woonkamer'){\r\n                url   += 'chromecast-woonkamer/0';\r\n            }\r\n\r\n            // Show the iframe\r\n            document.querySelector('.mediaplayer').appendChild(iframe);\r\n\r\n            iframe.src   = url;\r\n        }\r\n    }\r\n}\r\n\r\n// Display the received entities\r\nfunction renderEntities(connection, entities) {\r\n    let firstRun    = false;\r\n\r\n    if(window.entities == undefined){\r\n        window.entities = entities;\r\n        firstRun        = true;\r\n    }\r\n\r\n    // Loop over the entities we are interested in\r\n    let playing = false;\r\n\r\n    Object.values(entities).forEach(entity => {\r\n        // Only do something if needed\r\n        if(entity.state != window.entities[entity.entity_id].state || firstRun){\r\n            processEntity(entity, entities);\r\n        }\r\n\r\n        // Check if we are playing no matter if it is changed or not\r\n        if( entity.entity_id.includes( 'media_player' ) && ( entity.state == 'playing' || entity.state == 'buffering')){\r\n            playing = true;\r\n        }\r\n    });\r\n\r\n    // Store the updated entities\r\n    window.entities = entities;\r\n\r\n    // Show main container again if we are not playing and there is an iframe\r\n    if( !playing && document.querySelector('.mediaplayer iframe') != null ){\r\n        console.log('Hiding Media player');\r\n\r\n        // hide all\r\n        document.querySelector('.mediaplayer').remove(); \r\n\r\n        document.querySelector('.container').style.display = 'block';   \r\n    }\r\n}\r\n  \r\n/**\r\n * Updates the date and time on the header\r\n */\r\nfunction setDateTime() {\r\n    const today     = new Date();\r\n    let h           = today.getHours();\r\n    let m           = today.getMinutes();\r\n    m               = addLeadingZeros(m);\r\n\r\n    let dateString  = `${today.getDate()}-${today.getMonth()+1}-${today.getFullYear()}`;\r\n\r\n    if(document.getElementById('clock').innerHTML !=  h + \":\" + m){\r\n        document.getElementById('clock').innerHTML =  h + \":\" + m;\r\n    }\r\n\r\n    if(document.getElementById('date').innerHTML !=  dateString){\r\n        document.getElementById('date').innerHTML =  dateString;\r\n    }\r\n}\r\n\r\n/**\r\n * Adds a zero to numbers below 10\r\n * \r\n * @param {integer} i the number to check\r\n * \r\n * @returns {string}    number with leading zeros if needed\r\n */\r\nfunction addLeadingZeros(i) {\r\n    if (i < 10) {i = \"0\" + i};  // add zero in front of numbers < 10\r\n\r\n    return i;\r\n}\r\n\r\n/**\r\n * Check if a device is not updated in a while\r\n * @param {object}  entity      The home assistant enity\r\n * @param {string}  selector    The queryselector\r\n */\r\nfunction checkTimedOut(entity, selector){\r\n    let date        = Date.parse(entity.last_changed);\r\n\r\n    let minutes     = ( Date.now() - date ) / 1000 / 60;\r\n\r\n    let timedOut    = false;\r\n\r\n    if(minutes > 180){\r\n        timedOut    = true;\r\n    }\r\n\r\n    if(timedOut){\r\n        document.querySelector(selector).classList.add('timedout');\r\n    }else{\r\n        document.querySelector(selector).classList.remove('timedout');\r\n    }\r\n}\r\n\r\n/**\r\n * Updates the display of the rain\r\n */\r\nfunction updateRain(rain, rainRate){\r\n    if(rain == 0){\r\n        return;\r\n    }\r\n\r\n    let el  = document.getElementById('rain');\r\n\r\n    let val = `<img src='rain.png' width='70px'>`;\r\n\r\n    if(rainRate > 0){\r\n        val += `${rainRate}mm/h`;\r\n    }else if(rain > 0){\r\n        val += `${rain}mm`;\r\n    }else{\r\n        val = ``;\r\n    }\r\n\r\n    if(el.innerHTML !=  val){\r\n        el.innerHTML =  val;\r\n\r\n        if(val == ''){\r\n            el.style.display = 'none';\r\n            document.getElementById('date').style.display = 'block';\r\n        }else{\r\n            el.style.display = 'block';\r\n            document.getElementById('date').style.display = 'none';\r\n        }\r\n    }\r\n}\r\n\r\n/* Based on ethanny2 solution: https://gist.github.com/ethanny2/44d5ad69970596e96e0b48139b89154b */\r\nfunction detectDoubleTap(doubleTapMs) {\r\n    let timeout, lastTap = 0;\r\n\r\n    return function detectDoubleTap(event) {\r\n        const currentTime = new Date().getTime();\r\n        const tapLength   = currentTime - lastTap;\r\n\r\n        if (0 < tapLength && tapLength < doubleTapMs) {\r\n            event.preventDefault();\r\n\r\n            const doubleTap = new CustomEvent(\"doubletap\", {\r\n                bubbles: true,\r\n                detail: event\r\n            });\r\n\r\n            event.target.dispatchEvent(doubleTap)\r\n        } else {\r\n            timeout = setTimeout(() => clearTimeout(timeout), doubleTapMs)\r\n        }\r\n        lastTap = currentTime\r\n    }\r\n}\r\n\r\nwindow.setupEntitiesSubscription = async () => {\r\n    if (unsubEntities) {\r\n        unsubEntities();\r\n        console.log(\"Sleeping\");\r\n        await new Promise((resolve) => setTimeout(resolve, 4000));\r\n    }\r\n\r\n    unsubEntities = subscribeEntities(\r\n        connection, \r\n        (entities) => renderEntities(connection, entities),\r\n        entIds\r\n    );\r\n};\r\n\r\n// Update the time every minute\r\nsetDateTime();\r\nsetInterval(setDateTime, 60000);\r\n\r\nif(typeof(HA_INSTANCE) != 'undefined'){\r\n    console.log('Logging in with long live access token');\r\n\r\n    await (async () => {\r\n        const auth = createLongLivedTokenAuth(\r\n            HA_INSTANCE,\r\n            HA_SECRET,\r\n        );\r\n\r\n        connection = await createConnection({ auth });\r\n    })();\r\n}else{\r\n    await authenticate();\r\n}\r\n\r\nsetupEntitiesSubscription();\r\n\r\n// initialize the new event\r\ndocument.addEventListener('pointerup', detectDoubleTap(500));\r\n\r\n// Listen to two taps on the screen\r\ndocument.addEventListener('doubletap', (event) => {\r\n    ['switch.woonkamer_lamp_switch_0', 'switch.smart_plug_3_socket_1', 'switch.smart_plug_2_socket_1'].forEach(id =>{\r\n        callService(connection, \"homeassistant\", \"toggle\", {\r\n            entity_id: id,\r\n        });\r\n    });\r\n});\r\n\r\nwindow.scrollTo(0, 0);\r\n\r\n// Hide topbar when iframe is loaded\r\nasync function hideTopBar(event){\r\n    let iframe  = event.target;\r\n    await new Promise(r => setTimeout(r, 5000));\r\n\r\n    try{\r\n        iframe.contentWindow.document.querySelector(\"home-assistant\").shadowRoot.querySelector(\"home-assistant-main\").shadowRoot.querySelector(\"ha-panel-lovelace\").shadowRoot.querySelector(\"hui-root\").shadowRoot.querySelector(\".header\").remove();\r\n\r\n        iframe.contentWindow.document.querySelector(\"home-assistant\").shadowRoot.querySelector(\"home-assistant-main\").shadowRoot.querySelector(\"ha-panel-lovelace\").shadowRoot.querySelector(\"hui-root\").shadowRoot.querySelector(\"#view\").style.paddingTop='unset';\r\n\r\n        document.querySelector(\"body > home-assistant\").shadowRoot.querySelector(\"home-assistant-main\").shadowRoot.querySelector(\"ha-drawer > ha-sidebar\")\r\n    }catch(err) {\r\n        // Wait a minute\r\n        await new Promise(r => setTimeout(r, 10000));\r\n\r\n        counter++;\r\n\r\n        if( counter < 10){\r\n            hideTopBar(event);\r\n        }else{\r\n            console.log(err.message);\r\n        }\r\n    }\r\n}","import { parseQuery } from \"./util.js\";\nimport { ERR_HASS_HOST_REQUIRED, ERR_INVALID_AUTH, ERR_INVALID_AUTH_CALLBACK, ERR_INVALID_HTTPS_TO_HTTP, } from \"./errors.js\";\nexport const genClientId = () => `${location.protocol}//${location.host}/`;\nexport const genExpires = (expires_in) => {\n    return expires_in * 1000 + Date.now();\n};\nfunction genRedirectUrl() {\n    // Get current url but without # part.\n    const { protocol, host, pathname, search } = location;\n    return `${protocol}//${host}${pathname}${search}`;\n}\nfunction genAuthorizeUrl(hassUrl, clientId, redirectUrl, state) {\n    let authorizeUrl = `${hassUrl}/auth/authorize?response_type=code&redirect_uri=${encodeURIComponent(redirectUrl)}`;\n    if (clientId !== null) {\n        authorizeUrl += `&client_id=${encodeURIComponent(clientId)}`;\n    }\n    if (state) {\n        authorizeUrl += `&state=${encodeURIComponent(state)}`;\n    }\n    return authorizeUrl;\n}\nfunction redirectAuthorize(hassUrl, clientId, redirectUrl, state) {\n    // Add either ?auth_callback=1 or &auth_callback=1\n    redirectUrl += (redirectUrl.includes(\"?\") ? \"&\" : \"?\") + \"auth_callback=1\";\n    document.location.href = genAuthorizeUrl(hassUrl, clientId, redirectUrl, state);\n}\nasync function tokenRequest(hassUrl, clientId, data) {\n    // Browsers don't allow fetching tokens from https -> http.\n    // Throw an error because it's a pain to debug this.\n    // Guard against not working in node.\n    const l = typeof location !== \"undefined\" && location;\n    if (l && l.protocol === \"https:\") {\n        // Ensure that the hassUrl is hosted on https.\n        const a = document.createElement(\"a\");\n        a.href = hassUrl;\n        if (a.protocol === \"http:\" && a.hostname !== \"localhost\") {\n            throw ERR_INVALID_HTTPS_TO_HTTP;\n        }\n    }\n    const formData = new FormData();\n    if (clientId !== null) {\n        formData.append(\"client_id\", clientId);\n    }\n    Object.keys(data).forEach((key) => {\n        // @ts-ignore\n        formData.append(key, data[key]);\n    });\n    const resp = await fetch(`${hassUrl}/auth/token`, {\n        method: \"POST\",\n        credentials: \"same-origin\",\n        body: formData,\n    });\n    if (!resp.ok) {\n        throw resp.status === 400 /* auth invalid */ ||\n            resp.status === 403 /* user not active */\n            ? ERR_INVALID_AUTH\n            : new Error(\"Unable to fetch tokens\");\n    }\n    const tokens = await resp.json();\n    tokens.hassUrl = hassUrl;\n    tokens.clientId = clientId;\n    tokens.expires = genExpires(tokens.expires_in);\n    return tokens;\n}\nfunction fetchToken(hassUrl, clientId, code) {\n    return tokenRequest(hassUrl, clientId, {\n        code,\n        grant_type: \"authorization_code\",\n    });\n}\nfunction encodeOAuthState(state) {\n    return btoa(JSON.stringify(state));\n}\nfunction decodeOAuthState(encoded) {\n    return JSON.parse(atob(encoded));\n}\nexport class Auth {\n    constructor(data, saveTokens) {\n        this.data = data;\n        this._saveTokens = saveTokens;\n    }\n    get wsUrl() {\n        // Convert from http:// -> ws://, https:// -> wss://\n        return `ws${this.data.hassUrl.substr(4)}/api/websocket`;\n    }\n    get accessToken() {\n        return this.data.access_token;\n    }\n    get expired() {\n        return Date.now() > this.data.expires;\n    }\n    /**\n     * Refresh the access token.\n     */\n    async refreshAccessToken() {\n        if (!this.data.refresh_token)\n            throw new Error(\"No refresh_token\");\n        const data = await tokenRequest(this.data.hassUrl, this.data.clientId, {\n            grant_type: \"refresh_token\",\n            refresh_token: this.data.refresh_token,\n        });\n        // Access token response does not contain refresh token.\n        data.refresh_token = this.data.refresh_token;\n        this.data = data;\n        if (this._saveTokens)\n            this._saveTokens(data);\n    }\n    /**\n     * Revoke the refresh & access tokens.\n     */\n    async revoke() {\n        if (!this.data.refresh_token)\n            throw new Error(\"No refresh_token to revoke\");\n        const formData = new FormData();\n        formData.append(\"token\", this.data.refresh_token);\n        // There is no error checking, as revoke will always return 200\n        await fetch(`${this.data.hassUrl}/auth/revoke`, {\n            method: \"POST\",\n            credentials: \"same-origin\",\n            body: formData,\n        });\n        if (this._saveTokens) {\n            this._saveTokens(null);\n        }\n    }\n}\nexport function createLongLivedTokenAuth(hassUrl, access_token) {\n    return new Auth({\n        hassUrl,\n        clientId: null,\n        expires: Date.now() + 1e11,\n        refresh_token: \"\",\n        access_token,\n        expires_in: 1e11,\n    });\n}\nexport async function getAuth(options = {}) {\n    let data;\n    let hassUrl = options.hassUrl;\n    // Strip trailing slash.\n    if (hassUrl && hassUrl[hassUrl.length - 1] === \"/\") {\n        hassUrl = hassUrl.substr(0, hassUrl.length - 1);\n    }\n    const clientId = options.clientId !== undefined ? options.clientId : genClientId();\n    const limitHassInstance = options.limitHassInstance === true;\n    // Use auth code if it was passed in\n    if (options.authCode && hassUrl) {\n        data = await fetchToken(hassUrl, clientId, options.authCode);\n        if (options.saveTokens) {\n            options.saveTokens(data);\n        }\n    }\n    // Check if we came back from an authorize redirect\n    if (!data) {\n        const query = parseQuery(location.search.substr(1));\n        // Check if we got redirected here from authorize page\n        if (\"auth_callback\" in query) {\n            // Restore state\n            const state = decodeOAuthState(query.state);\n            if (limitHassInstance &&\n                (state.hassUrl !== hassUrl || state.clientId !== clientId)) {\n                throw ERR_INVALID_AUTH_CALLBACK;\n            }\n            data = await fetchToken(state.hassUrl, state.clientId, query.code);\n            if (options.saveTokens) {\n                options.saveTokens(data);\n            }\n        }\n    }\n    // Check for stored tokens\n    if (!data && options.loadTokens) {\n        data = await options.loadTokens();\n    }\n    if (data) {\n        return new Auth(data, options.saveTokens);\n    }\n    if (hassUrl === undefined) {\n        throw ERR_HASS_HOST_REQUIRED;\n    }\n    // If no tokens found but a hassUrl was passed in, let's go get some tokens!\n    redirectAuthorize(hassUrl, clientId, options.redirectUrl || genRedirectUrl(), encodeOAuthState({\n        hassUrl,\n        clientId,\n    }));\n    // Just don't resolve while we navigate to next page\n    return new Promise(() => { });\n}\n","import * as messages from \"./messages.js\";\nexport const getStates = (connection) => connection.sendMessagePromise(messages.states());\nexport const getServices = (connection) => connection.sendMessagePromise(messages.services());\nexport const getConfig = (connection) => connection.sendMessagePromise(messages.config());\nexport const getUser = (connection) => connection.sendMessagePromise(messages.user());\nexport const callService = (connection, domain, service, serviceData, target, returnResponse) => connection.sendMessagePromise(messages.callService(domain, service, serviceData, target, returnResponse));\n","export const createStore = (state) => {\n    let listeners = [];\n    function unsubscribe(listener) {\n        let out = [];\n        for (let i = 0; i < listeners.length; i++) {\n            if (listeners[i] === listener) {\n                listener = null;\n            }\n            else {\n                out.push(listeners[i]);\n            }\n        }\n        listeners = out;\n    }\n    function setState(update, overwrite) {\n        state = overwrite ? update : Object.assign(Object.assign({}, state), update);\n        let currentListeners = listeners;\n        for (let i = 0; i < currentListeners.length; i++) {\n            currentListeners[i](state);\n        }\n    }\n    /**\n     * An observable state container, returned from {@link createStore}\n     * @name store\n     */\n    return {\n        get state() {\n            return state;\n        },\n        /**\n         * Create a bound copy of the given action function.\n         * The bound returned function invokes action() and persists the result back to the store.\n         * If the return value of `action` is a Promise, the resolved value will be used as state.\n         * @param {Function} action\tAn action of the form `action(state, ...args) -> stateUpdate`\n         * @returns {Function} boundAction()\n         */\n        action(action) {\n            function apply(result) {\n                setState(result, false);\n            }\n            // Note: perf tests verifying this implementation: https://esbench.com/bench/5a295e6299634800a0349500\n            return function () {\n                let args = [state];\n                for (let i = 0; i < arguments.length; i++)\n                    args.push(arguments[i]);\n                // @ts-ignore\n                let ret = action.apply(this, args);\n                if (ret != null) {\n                    return ret instanceof Promise ? ret.then(apply) : apply(ret);\n                }\n            };\n        },\n        /**\n         * Apply a partial state object to the current state, invoking registered listeners.\n         * @param {Object} update\t\t\t\tAn object with properties to be merged into state\n         * @param {Boolean} [overwrite=false]\tIf `true`, update will replace state instead of being merged into it\n         */\n        setState,\n        clearState() {\n            state = undefined;\n        },\n        /**\n         * Register a listener function to be called whenever state is changed. Returns an `unsubscribe()` function.\n         * @param {Function} listener\tA function to call when state changes. Gets passed the new state.\n         * @returns {Function} unsubscribe()\n         */\n        subscribe(listener) {\n            listeners.push(listener);\n            return () => {\n                unsubscribe(listener);\n            };\n        },\n        // /**\n        //  * Remove a previously-registered listener function.\n        //  * @param {Function} listener\tThe callback previously passed to `subscribe()` that should be removed.\n        //  * @function\n        //  */\n        // unsubscribe,\n    };\n};\n","import { createStore } from \"./store.js\";\n// Time to wait to unsubscribe from updates after last subscriber unsubscribes\nconst UNSUB_GRACE_PERIOD = 5000; // 5 seconds\nconst DEBUG = false;\n/**\n *\n * @param conn connection\n * @param key the key to store it on the connection. Must be unique for each collection.\n * @param fetchCollection fetch the current state. If undefined assumes subscribeUpdates receives current state\n * @param subscribeUpdates subscribe to updates on the current state\n * @returns\n */\nexport const getCollection = (conn, key, fetchCollection, subscribeUpdates, options = { unsubGrace: true, entity_ids: [] }) => {\n    // @ts-ignore\n    if (conn[key]) {\n        // @ts-ignore\n        return conn[key];\n    }\n    let active = 0;\n    let unsubProm;\n    let unsubTimer;\n    let store = createStore();\n    const refresh = () => {\n        if (!fetchCollection) {\n            throw new Error(\"Collection does not support refresh\");\n        }\n        return fetchCollection(conn).then((state) => store.setState(state, true));\n    };\n    const refreshSwallow = () => refresh().catch((err) => {\n        // Swallow errors if socket is connecting, closing or closed.\n        // We will automatically call refresh again when we re-establish the connection.\n        if (conn.connected) {\n            throw err;\n        }\n    });\n    const setupUpdateSubscription = () => {\n        if (unsubTimer !== undefined) {\n            if (DEBUG) {\n                console.log(`Prevented unsubscribe for ${key}`);\n            }\n            clearTimeout(unsubTimer);\n            unsubTimer = undefined;\n            return;\n        }\n        if (DEBUG) {\n            console.log(`Subscribing to ${key}`);\n        }\n        if (subscribeUpdates) {\n            unsubProm = subscribeUpdates(conn, store, options.entity_ids);\n        }\n        if (fetchCollection) {\n            // Fetch when connection re-established.\n            conn.addEventListener(\"ready\", refreshSwallow);\n            refreshSwallow();\n        }\n        conn.addEventListener(\"disconnected\", handleDisconnect);\n    };\n    const teardownUpdateSubscription = () => {\n        if (DEBUG) {\n            console.log(`Unsubscribing from ${key}`);\n        }\n        unsubTimer = undefined;\n        // Unsubscribe from changes\n        if (unsubProm)\n            unsubProm.then((unsub) => {\n                unsub();\n            });\n        store.clearState();\n        conn.removeEventListener(\"ready\", refresh);\n        conn.removeEventListener(\"disconnected\", handleDisconnect);\n    };\n    const scheduleTeardownUpdateSubscription = () => {\n        if (DEBUG) {\n            console.log(`Scheduling unsubscribing from ${key}`);\n        }\n        unsubTimer = setTimeout(teardownUpdateSubscription, UNSUB_GRACE_PERIOD);\n    };\n    const handleDisconnect = () => {\n        // If we're going to unsubscribe and then lose connection,\n        // just unsubscribe immediately.\n        if (unsubTimer) {\n            clearTimeout(unsubTimer);\n            teardownUpdateSubscription();\n        }\n    };\n    // @ts-ignore\n    conn[key] = {\n        get state() {\n            return store.state;\n        },\n        refresh,\n        subscribe(subscriber) {\n            active++;\n            if (DEBUG) {\n                console.log(`New subscriber for ${key}. Active subscribers: ${active}`);\n            }\n            // If this was the first subscriber, attach collection\n            if (active === 1) {\n                setupUpdateSubscription();\n            }\n            const unsub = store.subscribe(subscriber);\n            if (store.state !== undefined) {\n                // Don't call it right away so that caller has time\n                // to initialize all the things.\n                setTimeout(() => subscriber(store.state), 0);\n            }\n            return () => {\n                unsub();\n                active--;\n                if (DEBUG) {\n                    console.log(`Unsubscribe for ${key}. Active subscribers: ${active}`);\n                }\n                if (!active) {\n                    options.unsubGrace\n                        ? scheduleTeardownUpdateSubscription()\n                        : teardownUpdateSubscription();\n                }\n            };\n        },\n    };\n    // @ts-ignore\n    return conn[key];\n};\n// Legacy name. It gets a collection and subscribes.\nexport const createCollection = (key, fetchCollection, subscribeUpdates, conn, onChange) => getCollection(conn, key, fetchCollection, subscribeUpdates).subscribe(onChange);\n","import { getCollection } from \"./collection.js\";\nimport { getStates } from \"./commands.js\";\nimport { atLeastHaVersion } from \"./util.js\";\nfunction processEvent(store, updates) {\n    const state = Object.assign({}, store.state);\n    if (updates.a) {\n        for (const entityId in updates.a) {\n            const newState = updates.a[entityId];\n            let last_changed = new Date(newState.lc * 1000).toISOString();\n            state[entityId] = {\n                entity_id: entityId,\n                state: newState.s,\n                attributes: newState.a,\n                context: typeof newState.c === \"string\"\n                    ? { id: newState.c, parent_id: null, user_id: null }\n                    : newState.c,\n                last_changed: last_changed,\n                last_updated: newState.lu\n                    ? new Date(newState.lu * 1000).toISOString()\n                    : last_changed,\n            };\n        }\n    }\n    if (updates.r) {\n        for (const entityId of updates.r) {\n            delete state[entityId];\n        }\n    }\n    if (updates.c) {\n        for (const entityId in updates.c) {\n            let entityState = state[entityId];\n            if (!entityState) {\n                console.warn(\"Received state update for unknown entity\", entityId);\n                continue;\n            }\n            entityState = Object.assign({}, entityState);\n            const { \"+\": toAdd, \"-\": toRemove } = updates.c[entityId];\n            const attributesChanged = (toAdd === null || toAdd === void 0 ? void 0 : toAdd.a) || (toRemove === null || toRemove === void 0 ? void 0 : toRemove.a);\n            const attributes = attributesChanged\n                ? Object.assign({}, entityState.attributes) : entityState.attributes;\n            if (toAdd) {\n                if (toAdd.s !== undefined) {\n                    entityState.state = toAdd.s;\n                }\n                if (toAdd.c) {\n                    if (typeof toAdd.c === \"string\") {\n                        entityState.context = Object.assign(Object.assign({}, entityState.context), { id: toAdd.c });\n                    }\n                    else {\n                        entityState.context = Object.assign(Object.assign({}, entityState.context), toAdd.c);\n                    }\n                }\n                if (toAdd.lc) {\n                    entityState.last_updated = entityState.last_changed = new Date(toAdd.lc * 1000).toISOString();\n                }\n                else if (toAdd.lu) {\n                    entityState.last_updated = new Date(toAdd.lu * 1000).toISOString();\n                }\n                if (toAdd.a) {\n                    Object.assign(attributes, toAdd.a);\n                }\n            }\n            if (toRemove === null || toRemove === void 0 ? void 0 : toRemove.a) {\n                for (const key of toRemove.a) {\n                    delete attributes[key];\n                }\n            }\n            if (attributesChanged) {\n                entityState.attributes = attributes;\n            }\n            state[entityId] = entityState;\n        }\n    }\n    store.setState(state, true);\n}\nconst subscribeUpdates = (conn, store, entity_ids=[]) => {\n    conn.subscribeMessage((ev) => processEvent(store, ev), {\n        type: \"subscribe_entities\",\n        entity_ids: entity_ids,\n    });\n}\nfunction legacyProcessEvent(store, event) {\n    const state = store.state;\n    if (state === undefined)\n        return;\n    const { entity_id, new_state } = event.data;\n    if (new_state) {\n        store.setState({ [new_state.entity_id]: new_state });\n    }\n    else {\n        const newEntities = Object.assign({}, state);\n        delete newEntities[entity_id];\n        store.setState(newEntities, true);\n    }\n}\nasync function legacyFetchEntities(conn) {\n    const states = await getStates(conn);\n    const entities = {};\n    for (let i = 0; i < states.length; i++) {\n        const state = states[i];\n        entities[state.entity_id] = state;\n    }\n    return entities;\n}\nconst legacySubscribeUpdates = (conn, store) => conn.subscribeEvents((ev) => legacyProcessEvent(store, ev), \"state_changed\");\nexport const entitiesColl = (conn, entity_ids=[]) => atLeastHaVersion(conn.haVersion, 2022, 4, 0)\n    ? getCollection(conn, \"_ent\", undefined, subscribeUpdates, {unsubGrace: true, entity_ids: entity_ids})\n    : getCollection(conn, \"_ent\", legacyFetchEntities, legacySubscribeUpdates);\nexport const subscribeEntities = (conn, onChange, entity_ids=[]) => entitiesColl(conn, entity_ids).subscribe(onChange)\n","export const ERR_CANNOT_CONNECT = 1;\nexport const ERR_INVALID_AUTH = 2;\nexport const ERR_CONNECTION_LOST = 3;\nexport const ERR_HASS_HOST_REQUIRED = 4;\nexport const ERR_INVALID_HTTPS_TO_HTTP = 5;\nexport const ERR_INVALID_AUTH_CALLBACK = 6;\n","/**\n * Create a web socket connection with a Home Assistant instance.\n */\nimport { ERR_INVALID_AUTH, ERR_CANNOT_CONNECT, ERR_HASS_HOST_REQUIRED, } from \"./errors.js\";\nimport * as messages from \"./messages.js\";\nimport { atLeastHaVersion } from \"./util.js\";\nconst DEBUG = false;\nexport const MSG_TYPE_AUTH_REQUIRED = \"auth_required\";\nexport const MSG_TYPE_AUTH_INVALID = \"auth_invalid\";\nexport const MSG_TYPE_AUTH_OK = \"auth_ok\";\nexport function createSocket(options) {\n    if (!options.auth) {\n        throw ERR_HASS_HOST_REQUIRED;\n    }\n    const auth = options.auth;\n    // Start refreshing expired tokens even before the WS connection is open.\n    // We know that we will need auth anyway.\n    let authRefreshTask = auth.expired\n        ? auth.refreshAccessToken().then(() => {\n            authRefreshTask = undefined;\n        }, () => {\n            authRefreshTask = undefined;\n        })\n        : undefined;\n    // Convert from http:// -> ws://, https:// -> wss://\n    const url = auth.wsUrl;\n    if (DEBUG) {\n        console.log(\"[Auth phase] Initializing\", url);\n    }\n    function connect(triesLeft, promResolve, promReject) {\n        if (DEBUG) {\n            console.log(\"[Auth Phase] New connection\", url);\n        }\n        const socket = new WebSocket(url);\n        // If invalid auth, we will not try to reconnect.\n        let invalidAuth = false;\n        const closeMessage = () => {\n            // If we are in error handler make sure close handler doesn't also fire.\n            socket.removeEventListener(\"close\", closeMessage);\n            if (invalidAuth) {\n                promReject(ERR_INVALID_AUTH);\n                return;\n            }\n            // Reject if we no longer have to retry\n            if (triesLeft === 0) {\n                // We never were connected and will not retry\n                promReject(ERR_CANNOT_CONNECT);\n                return;\n            }\n            const newTries = triesLeft === -1 ? -1 : triesLeft - 1;\n            // Try again in a second\n            setTimeout(() => connect(newTries, promResolve, promReject), 1000);\n        };\n        // Auth is mandatory, so we can send the auth message right away.\n        const handleOpen = async (event) => {\n            try {\n                if (auth.expired) {\n                    await (authRefreshTask ? authRefreshTask : auth.refreshAccessToken());\n                }\n                socket.send(JSON.stringify(messages.auth(auth.accessToken)));\n            }\n            catch (err) {\n                // Refresh token failed\n                invalidAuth = err === ERR_INVALID_AUTH;\n                socket.close();\n            }\n        };\n        const handleMessage = async (event) => {\n            const message = JSON.parse(event.data);\n            if (DEBUG) {\n                console.log(\"[Auth phase] Received\", message);\n            }\n            switch (message.type) {\n                case MSG_TYPE_AUTH_INVALID:\n                    invalidAuth = true;\n                    socket.close();\n                    break;\n                case MSG_TYPE_AUTH_OK:\n                    socket.removeEventListener(\"open\", handleOpen);\n                    socket.removeEventListener(\"message\", handleMessage);\n                    socket.removeEventListener(\"close\", closeMessage);\n                    socket.removeEventListener(\"error\", closeMessage);\n                    socket.haVersion = message.ha_version;\n                    if (atLeastHaVersion(socket.haVersion, 2022, 9)) {\n                        socket.send(JSON.stringify(messages.supportedFeatures()));\n                    }\n                    promResolve(socket);\n                    break;\n                default:\n                    if (DEBUG) {\n                        // We already send response to this message when socket opens\n                        if (message.type !== MSG_TYPE_AUTH_REQUIRED) {\n                            console.warn(\"[Auth phase] Unhandled message\", message);\n                        }\n                    }\n            }\n        };\n        socket.addEventListener(\"open\", handleOpen);\n        socket.addEventListener(\"message\", handleMessage);\n        socket.addEventListener(\"close\", closeMessage);\n        socket.addEventListener(\"error\", closeMessage);\n    }\n    return new Promise((resolve, reject) => connect(options.setupRetry, resolve, reject));\n}\n","/**\n * Connection that wraps a socket and provides an interface to interact with\n * the Home Assistant websocket API.\n */\nimport * as messages from \"./messages.js\";\nimport { ERR_INVALID_AUTH, ERR_CONNECTION_LOST } from \"./errors.js\";\nconst DEBUG = false;\nexport class Connection {\n    constructor(socket, options) {\n        this._handleMessage = (event) => {\n            let messageGroup = JSON.parse(event.data);\n            if (!Array.isArray(messageGroup)) {\n                messageGroup = [messageGroup];\n            }\n            messageGroup.forEach((message) => {\n                if (DEBUG) {\n                    console.log(\"Received\", message);\n                }\n                const info = this.commands.get(message.id);\n                switch (message.type) {\n                    case \"event\":\n                        if (info) {\n                            info.callback(message.event);\n                        }\n                        else {\n                            console.warn(`Received event for unknown subscription ${message.id}. Unsubscribing.`);\n                            this.sendMessagePromise(messages.unsubscribeEvents(message.id)).catch((err) => {\n                                if (DEBUG) {\n                                    console.warn(` Error unsubsribing from unknown subscription ${message.id}`, err);\n                                }\n                            });\n                        }\n                        break;\n                    case \"result\":\n                        // No info is fine. If just sendMessage is used, we did not store promise for result\n                        if (info) {\n                            if (message.success) {\n                                info.resolve(message.result);\n                                // Don't remove subscriptions.\n                                if (!(\"subscribe\" in info)) {\n                                    this.commands.delete(message.id);\n                                }\n                            }\n                            else {\n                                info.reject(message.error);\n                                this.commands.delete(message.id);\n                            }\n                        }\n                        break;\n                    case \"pong\":\n                        if (info) {\n                            info.resolve();\n                            this.commands.delete(message.id);\n                        }\n                        else {\n                            console.warn(`Received unknown pong response ${message.id}`);\n                        }\n                        break;\n                    default:\n                        if (DEBUG) {\n                            console.warn(\"Unhandled message\", message);\n                        }\n                }\n            });\n        };\n        this._handleClose = async () => {\n            const oldCommands = this.commands;\n            // reset to original state except haVersion\n            this.commandId = 1;\n            this.oldSubscriptions = this.commands;\n            this.commands = new Map();\n            this.socket = undefined;\n            // Reject in-flight sendMessagePromise requests\n            oldCommands.forEach((info) => {\n                // We don't cancel subscribeEvents commands in flight\n                // as we will be able to recover them.\n                if (!(\"subscribe\" in info)) {\n                    info.reject(messages.error(ERR_CONNECTION_LOST, \"Connection lost\"));\n                }\n            });\n            if (this.closeRequested) {\n                return;\n            }\n            this.fireEvent(\"disconnected\");\n            // Disable setupRetry, we control it here with auto-backoff\n            const options = Object.assign(Object.assign({}, this.options), { setupRetry: 0 });\n            const reconnect = (tries) => {\n                setTimeout(async () => {\n                    if (this.closeRequested) {\n                        return;\n                    }\n                    if (DEBUG) {\n                        console.log(\"Trying to reconnect\");\n                    }\n                    try {\n                        const socket = await options.createSocket(options);\n                        this._setSocket(socket);\n                    }\n                    catch (err) {\n                        if (this._queuedMessages) {\n                            const queuedMessages = this._queuedMessages;\n                            this._queuedMessages = undefined;\n                            for (const msg of queuedMessages) {\n                                if (msg.reject) {\n                                    msg.reject(ERR_CONNECTION_LOST);\n                                }\n                            }\n                        }\n                        if (err === ERR_INVALID_AUTH) {\n                            this.fireEvent(\"reconnect-error\", err);\n                        }\n                        else {\n                            reconnect(tries + 1);\n                        }\n                    }\n                }, Math.min(tries, 5) * 1000);\n            };\n            if (this.suspendReconnectPromise) {\n                await this.suspendReconnectPromise;\n                this.suspendReconnectPromise = undefined;\n                // For the first retry after suspend, we will queue up\n                // all messages.\n                this._queuedMessages = [];\n            }\n            reconnect(0);\n        };\n        // connection options\n        //  - setupRetry: amount of ms to retry when unable to connect on initial setup\n        //  - createSocket: create a new Socket connection\n        this.options = options;\n        // id if next command to send\n        this.commandId = 2; // socket may send 1 at the start to enable features\n        // info about active subscriptions and commands in flight\n        this.commands = new Map();\n        // map of event listeners\n        this.eventListeners = new Map();\n        // true if a close is requested by the user\n        this.closeRequested = false;\n        this._setSocket(socket);\n    }\n    get connected() {\n        // Using conn.socket.OPEN instead of WebSocket for better node support\n        return (this.socket !== undefined && this.socket.readyState == this.socket.OPEN);\n    }\n    _setSocket(socket) {\n        this.socket = socket;\n        this.haVersion = socket.haVersion;\n        socket.addEventListener(\"message\", this._handleMessage);\n        socket.addEventListener(\"close\", this._handleClose);\n        const oldSubscriptions = this.oldSubscriptions;\n        if (oldSubscriptions) {\n            this.oldSubscriptions = undefined;\n            oldSubscriptions.forEach((info) => {\n                if (\"subscribe\" in info && info.subscribe) {\n                    info.subscribe().then((unsub) => {\n                        info.unsubscribe = unsub;\n                        // We need to resolve this in case it wasn't resolved yet.\n                        // This allows us to subscribe while we're disconnected\n                        // and recover properly.\n                        info.resolve();\n                    });\n                }\n            });\n        }\n        const queuedMessages = this._queuedMessages;\n        if (queuedMessages) {\n            this._queuedMessages = undefined;\n            for (const queuedMsg of queuedMessages) {\n                queuedMsg.resolve();\n            }\n        }\n        this.fireEvent(\"ready\");\n    }\n    addEventListener(eventType, callback) {\n        let listeners = this.eventListeners.get(eventType);\n        if (!listeners) {\n            listeners = [];\n            this.eventListeners.set(eventType, listeners);\n        }\n        listeners.push(callback);\n    }\n    removeEventListener(eventType, callback) {\n        const listeners = this.eventListeners.get(eventType);\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(callback);\n        if (index !== -1) {\n            listeners.splice(index, 1);\n        }\n    }\n    fireEvent(eventType, eventData) {\n        (this.eventListeners.get(eventType) || []).forEach((callback) => callback(this, eventData));\n    }\n    suspendReconnectUntil(suspendPromise) {\n        this.suspendReconnectPromise = suspendPromise;\n    }\n    suspend() {\n        if (!this.suspendReconnectPromise) {\n            throw new Error(\"Suspend promise not set\");\n        }\n        if (this.socket) {\n            this.socket.close();\n        }\n    }\n    /**\n     * Reconnect the websocket connection.\n     * @param force discard old socket instead of gracefully closing it.\n     */\n    reconnect(force = false) {\n        if (!this.socket) {\n            return;\n        }\n        if (!force) {\n            this.socket.close();\n            return;\n        }\n        this.socket.removeEventListener(\"message\", this._handleMessage);\n        this.socket.removeEventListener(\"close\", this._handleClose);\n        this.socket.close();\n        this._handleClose();\n    }\n    close() {\n        this.closeRequested = true;\n        if (this.socket) {\n            this.socket.close();\n        }\n    }\n    /**\n     * Subscribe to a specific or all events.\n     *\n     * @param callback Callback  to be called when a new event fires\n     * @param eventType\n     * @returns promise that resolves to an unsubscribe function\n     */\n    async subscribeEvents(callback, eventType) {\n        return this.subscribeMessage(callback, messages.subscribeEvents(eventType));\n    }\n    ping() {\n        return this.sendMessagePromise(messages.ping());\n    }\n    sendMessage(message, commandId) {\n        if (!this.connected) {\n            throw ERR_CONNECTION_LOST;\n        }\n        if (DEBUG) {\n            console.log(\"Sending\", message);\n        }\n        if (this._queuedMessages) {\n            if (commandId) {\n                throw new Error(\"Cannot queue with commandId\");\n            }\n            this._queuedMessages.push({ resolve: () => this.sendMessage(message) });\n            return;\n        }\n        if (!commandId) {\n            commandId = this._genCmdId();\n        }\n        message.id = commandId;\n        this.socket.send(JSON.stringify(message));\n    }\n    sendMessagePromise(message) {\n        return new Promise((resolve, reject) => {\n            if (this._queuedMessages) {\n                this._queuedMessages.push({\n                    reject,\n                    resolve: async () => {\n                        try {\n                            resolve(await this.sendMessagePromise(message));\n                        }\n                        catch (err) {\n                            reject(err);\n                        }\n                    },\n                });\n                return;\n            }\n            const commandId = this._genCmdId();\n            this.commands.set(commandId, { resolve, reject });\n            this.sendMessage(message, commandId);\n        });\n    }\n    /**\n     * Call a websocket command that starts a subscription on the backend.\n     *\n     * @param message the message to start the subscription\n     * @param callback the callback to be called when a new item arrives\n     * @param [options.resubscribe] re-established a subscription after a reconnect. Defaults to true.\n     * @returns promise that resolves to an unsubscribe function\n     */\n    async subscribeMessage(callback, subscribeMessage, options) {\n        if (this._queuedMessages) {\n            await new Promise((resolve, reject) => {\n                this._queuedMessages.push({ resolve, reject });\n            });\n        }\n        let info;\n        await new Promise((resolve, reject) => {\n            // Command ID that will be used\n            const commandId = this._genCmdId();\n            // We store unsubscribe on info object. That way we can overwrite it in case\n            // we get disconnected and we have to subscribe again.\n            info = {\n                resolve,\n                reject,\n                callback,\n                subscribe: (options === null || options === void 0 ? void 0 : options.resubscribe) !== false\n                    ? () => this.subscribeMessage(callback, subscribeMessage)\n                    : undefined,\n                unsubscribe: async () => {\n                    // No need to unsubscribe if we're disconnected\n                    if (this.connected) {\n                        await this.sendMessagePromise(messages.unsubscribeEvents(commandId));\n                    }\n                    this.commands.delete(commandId);\n                },\n            };\n            this.commands.set(commandId, info);\n            try {\n                this.sendMessage(subscribeMessage, commandId);\n            }\n            catch (err) {\n                // Happens when the websocket is already closing.\n                // Don't have to handle the error, reconnect logic will pick it up.\n            }\n        });\n        return () => info.unsubscribe();\n    }\n    _genCmdId() {\n        return ++this.commandId;\n    }\n}\n","// JS extensions in imports allow tsc output to be consumed by browsers.\nimport { createSocket } from \"./socket.js\";\nimport { Connection } from \"./connection.js\";\nexport * from \"./auth.js\";\nexport * from \"./collection.js\";\nexport * from \"./connection.js\";\nexport * from \"./config.js\";\nexport * from \"./services.js\";\nexport * from \"./entities.js\";\nexport * from \"./errors.js\";\nexport * from \"./socket.js\";\nexport * from \"./types.js\";\nexport * from \"./commands.js\";\nexport async function createConnection(options) {\n    const connOptions = Object.assign({ setupRetry: 0, createSocket }, options);\n    const socket = await connOptions.createSocket(connOptions);\n    const conn = new Connection(socket, connOptions);\n    return conn;\n}\n","export function auth(accessToken) {\n    return {\n        type: \"auth\",\n        access_token: accessToken,\n    };\n}\nexport function supportedFeatures() {\n    return {\n        type: \"supported_features\",\n        id: 1, // Always the first message after auth\n        features: { coalesce_messages: 1 },\n    };\n}\nexport function states() {\n    return {\n        type: \"get_states\",\n    };\n}\nexport function config() {\n    return {\n        type: \"get_config\",\n    };\n}\nexport function services() {\n    return {\n        type: \"get_services\",\n    };\n}\nexport function user() {\n    return {\n        type: \"auth/current_user\",\n    };\n}\nexport function callService(domain, service, serviceData, target, returnResponse) {\n    const message = {\n        type: \"call_service\",\n        domain,\n        service,\n        target,\n        return_response: returnResponse,\n    };\n    if (serviceData) {\n        message.service_data = serviceData;\n    }\n    return message;\n}\nexport function subscribeEvents(eventType) {\n    const message = {\n        type: \"subscribe_events\",\n    };\n    if (eventType) {\n        message.event_type = eventType;\n    }\n    return message;\n}\nexport function unsubscribeEvents(subscription) {\n    return {\n        type: \"unsubscribe_events\",\n        subscription,\n    };\n}\nexport function ping() {\n    return {\n        type: \"ping\",\n    };\n}\nexport function error(code, message) {\n    return {\n        type: \"result\",\n        success: false,\n        error: {\n            code,\n            message,\n        },\n    };\n}\n","export function parseQuery(queryString) {\n    const query = {};\n    const items = queryString.split(\"&\");\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i].split(\"=\");\n        const key = decodeURIComponent(item[0]);\n        const value = item.length > 1 ? decodeURIComponent(item[1]) : undefined;\n        query[key] = value;\n    }\n    return query;\n}\n// From: https://davidwalsh.name/javascript-debounce-function\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n// eslint-disable-next-line: ban-types\nexport const debounce = (func, wait, immediate = false) => {\n    let timeout;\n    // @ts-ignore\n    return function (...args) {\n        // @ts-ignore\n        const context = this;\n        const later = () => {\n            timeout = undefined;\n            if (!immediate) {\n                func.apply(context, args);\n            }\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) {\n            func.apply(context, args);\n        }\n    };\n};\nexport const atLeastHaVersion = (version, major, minor, patch) => {\n    const [haMajor, haMinor, haPatch] = version.split(\".\", 3);\n    return (Number(haMajor) > major ||\n        (Number(haMajor) === major &&\n            (patch === undefined\n                ? Number(haMinor) >= minor\n                : Number(haMinor) > minor)) ||\n        (patch !== undefined &&\n            Number(haMajor) === major &&\n            Number(haMinor) === minor &&\n            Number(haPatch) >= patch));\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(564);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","unsubEntities","connection","counter","entIds","async","authenticate","auth","authOptions","loadTokens","JSON","parse","localStorage","hassTokens","err","saveTokens","tokens","stringify","alert","hassUrl","prompt","ev","addEventListener","console","log","location","search","includes","history","replaceState","pathname","window","then","user","setMaxMinContent","selector","entity","document","querySelectorAll","forEach","el","textContent","state","time","Date","last_changed","h","getHours","m","getMinutes","addLeadingZeros","replace","processEntity","entities","entId","entity_id","querySelector","checkTimedOut","updateRain","style","display","iframe","createElement","name","onload","hideTopBar","url","appendChild","src","renderEntities","firstRun","undefined","playing","Object","values","remove","setDateTime","today","dateString","getDate","getMonth","getFullYear","getElementById","innerHTML","i","date","timedOut","now","classList","add","rain","rainRate","val","detectDoubleTap","doubleTapMs","timeout","lastTap","event","currentTime","getTime","tapLength","preventDefault","doubleTap","CustomEvent","bubbles","detail","target","dispatchEvent","setTimeout","clearTimeout","Promise","r","contentWindow","shadowRoot","paddingTop","message","setupEntitiesSubscription","resolve","setInterval","HA_INSTANCE","HA_SECRET","id","scrollTo","genClientId","protocol","host","genExpires","expires_in","tokenRequest","clientId","data","l","a","href","hostname","formData","FormData","append","keys","key","resp","fetch","method","credentials","body","ok","status","Error","json","expires","fetchToken","code","grant_type","Auth","constructor","this","_saveTokens","wsUrl","substr","accessToken","access_token","expired","refreshAccessToken","refresh_token","revoke","createLongLivedTokenAuth","getAuth","options","length","limitHassInstance","authCode","query","encoded","atob","redirectUrl","authorizeUrl","encodeURIComponent","genAuthorizeUrl","redirectAuthorize","genRedirectUrl","btoa","getStates","sendMessagePromise","getUser","callService","domain","service","serviceData","returnResponse","createStore","listeners","setState","update","overwrite","assign","currentListeners","action","apply","result","args","arguments","push","ret","clearState","subscribe","listener","out","unsubscribe","getCollection","conn","fetchCollection","subscribeUpdates","unsubGrace","entity_ids","unsubProm","unsubTimer","active","store","refresh","refreshSwallow","catch","connected","teardownUpdateSubscription","unsub","removeEventListener","handleDisconnect","subscriber","setupUpdateSubscription","subscribeMessage","updates","entityId","newState","lc","toISOString","s","attributes","context","c","parent_id","user_id","last_updated","lu","entityState","warn","toAdd","toRemove","attributesChanged","processEvent","type","legacyFetchEntities","states","legacySubscribeUpdates","subscribeEvents","new_state","newEntities","legacyProcessEvent","subscribeEntities","onChange","haVersion","entitiesColl","ERR_CANNOT_CONNECT","ERR_INVALID_AUTH","ERR_CONNECTION_LOST","ERR_HASS_HOST_REQUIRED","ERR_INVALID_HTTPS_TO_HTTP","ERR_INVALID_AUTH_CALLBACK","DEBUG","MSG_TYPE_AUTH_REQUIRED","MSG_TYPE_AUTH_INVALID","MSG_TYPE_AUTH_OK","createSocket","authRefreshTask","connect","triesLeft","promResolve","promReject","socket","WebSocket","invalidAuth","closeMessage","newTries","handleOpen","send","messages","close","handleMessage","ha_version","reject","setupRetry","Connection","_handleMessage","messageGroup","Array","isArray","info","commands","get","callback","success","delete","error","_handleClose","oldCommands","commandId","oldSubscriptions","Map","closeRequested","fireEvent","reconnect","tries","_setSocket","_queuedMessages","queuedMessages","msg","Math","min","suspendReconnectPromise","eventListeners","readyState","OPEN","queuedMsg","eventType","set","index","indexOf","splice","eventData","suspendReconnectUntil","suspendPromise","suspend","force","ping","sendMessage","_genCmdId","resubscribe","createConnection","connOptions","supportedFeatures","features","coalesce_messages","return_response","service_data","event_type","unsubscribeEvents","subscription","parseQuery","queryString","items","split","item","decodeURIComponent","value","atLeastHaVersion","version","major","minor","patch","haMajor","haMinor","haPatch","Number","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","Symbol","queue","d","fn","hasAwait","currentDeps","outerResolve","depQueues","Set","promise","rej","x","deps","map","dep","obj","e","wrapDeps","getResult","fnQueue","q","has","definition","o","defineProperty","enumerable","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}